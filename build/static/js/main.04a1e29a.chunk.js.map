{"version":3,"sources":["ffmpeg/Admin/Toast/Toast.js","ffmpeg/Admin/Activation/LocalStorage.js","ffmpeg/Admin/Activation/CommonMethods.js","ffmpeg/Admin/Activation/CheckIsActivated.js","ffmpeg/Home/ProgressAlert/ProgressAlert.js","ffmpeg/Entry/Entry.js","ffmpeg/Home/Header/Header.js","ffmpeg/Home/Content/Content.js","ffmpeg/Admin/Player/Player.js","ffmpeg/Home/Home.js","ffmpeg/Admin/BrandAnimation/BrandAnimation.js","ffmpeg/Admin/Menubar/Menubar.js","ffmpeg/Admin/Admin.js","ffmpeg/Admin/Loading/Loading.js","ffmpeg/Admin/Upload/Upload.js","ffmpeg/Admin/Modal/Modal.js","ffmpeg/Admin/AddChap/Add/Add.js","ffmpeg/Admin/Conversion/Conversion.js","ffmpeg/Admin/AddCsub/AddCsub.js","ffmpeg/Admin/AddChap/AddChap.js","ffmpeg/Admin/Settings/RemoteAuthUrl.js","ffmpeg/Admin/Settings/Settings.js","ffmpeg/Admin/Activation/Activation.js","ffmpeg/Admin/Activation/KeyGenerator.js","ffmpeg/Admin/Activation/Login.js","ffmpeg/Routes.js","ffmpeg/reducers/ActivationReducer.js","ffmpeg/reducers/index.js","App.js","index.js"],"names":["Toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ToastAlert","_alert","type","toastRef","toast","info","success","warn","error","progress","undefined","ffmpegLocalStorageDb","Dexie","version","stores","ffmpegLocalStorage","open","catch","err","console","log","GetFFMPEGLocalDataByKey","key","a","where","equals","first","data","value","PutFFMPEGLocalData","val","modify","add","ffmpeg_key","IsActivated","baseurl","axios","post","res","LocalStorage_IsActivated","LocalStorage_ActivationExpired","WillActivationExpired","ActivationExpiredDayStr","_from","moment","_today","local","format","diff","CheckIsActivated","window","ffmpeg_baseurl","dispatch","useDispatch","history","useHistory","useSelector","state","activation","useEffect","_checkIsActivated","payload","_IsActivated","_ActivationExpired","activated","activated_alert","location","pathname","push","ProgressAlert","props","className","alert","Entry","Container","fluid","loading_CheckActivation","Row","Col","isActivate","isAuth","to","color","size","icon","Header","style","flexDirection","selected_class","selected_subject","selected_chapter","Content","loading_class","enabled","my_class","loading_subject","my_subject","loading_chapter","my_chapter","Button","variant","onClick","Player","show","onhide","contentID","chapter","playerRef","React","useRef","playerWrapperRef","useState","getM3u8Url","setM3u8Url","Resize","actualWidth","innerWidth","document","documentElement","clientWidth","body","offsetWidth","innerHeight","clientHeight","offsetHeight","current","width","w","onresize","onblur","reload","_params","params","ref","length","srcoff","xsrc","src","autoPlay","controls","height","onEnded","classList","setTimeout","Home","getLoading_class","setLoading_class","getClasses","setClasses","getSelectedClass","setSelectedClass","getSelectedClassName","setSelectedClassName","getSelectedChapterName","setSelectedChapterName","getLoading_subject","setLoading_subject","getSubjects","setSubjects","getSelectedSubject","setSelectedSubject","getSelectedSubjectName","setSelectedSubjectName","getLoading_chapter","setLoading_chapter","getChapters","setChapters","body_blue","loadClasses","loadSubject","query","URLSearchParams","search","cls","get","sub","cls_name","chap_name","body_blue_reset","urlParamCreation","loadChapter","then","click_classItem","_item","id","click_subjectItem","_id","find","item","index","subjectName","mapSelectedSubjectsName","click_chapterItem","_e","chapterName","highlight","setPlayerContentID","setPlayerTitle","setLoadPlayer","_className","_target","target","querySelectorAll","forEach","i","remove","_search","replace","getLoadPlayer","getPlayerContentID","getPlayerTitle","map","e","BrandAnimation","Menubar","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","href","Admin","Loading","viewBox","preserveAspectRatio","transform","attributeName","values","keyTimes","dur","repeatCount","d","fill","Upload","getIsLoading","setIsLoading","getError","setError","getUnique_ID","setUnique_ID","getContent_file_label","setContent_file_label","getContent_file_alert","setContent_file_alert","getContent_file","setContent_file","getFile_Title","setFile_Title","getFile_UploadProgress","setFile_UploadProgress","getCancelToken","setCancelToken","validated","setValidated","titleRef","loadUnique_ID","onDrop","useCallback","acceptedFiles","name","split","getElementById","removeAttribute","bytesToSize","useDropzone","multiple","getRootProps","getInputProps","isDragActive","Id","bytes","parseInt","Math","floor","round","pow","ResetAll","querySelector","setAttribute","Card","Body","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","formData","FormData","append","source","CancelToken","config","headers","cancelToken","token","onUploadProgress","progressEvent","percentCompleted","loaded","total","UploadProgress","Group","controlId","Label","Control","defaultValue","placeholder","required","readOnly","Feedback","autoComplete","onChange","File","custom","Input","files","data-browse","Text","ProgressBar","animated","now","far","cancel","Modal","list","hide_visible","ListGroup","Item","Add","txtChapterId","loadSubjects","loadContents","classId","subjectId","elmChapter","getSelSubject","setSelSubject","elmSubject","isValidate_Subject_Init","isValidate_Subject","LooksGoodShowHide","getAllSub","setAllSub","label","selOption","getSelClass","setSelClass","elmClass","isValidate_Class_Init","isValidate_Class","getAllCls","setAllClass","getSelContentID","setSelContentID","elmContentID","isValidate_ContentID_Init","isValidate_ContentID","getAllContents","setAllContents","unshift","refElm","refValidateInit","elm","select","controlRef","borderColor","lookGoodElm","parentNode","nextSibling","contains","display","post_data","post_url","setError_Cls","options","Conversion","getContent","setContent","getSelectedLimit","setSelectedLimit","CProgressTimer","LazyKeyupTimer","contentInput","contentInputT","contentInputF","getModalData","setModalData","getShowModal","setShowModal","getShowModalHideBtn","setShowModalHideBtn","getPageItems","setPageItems","getContentParams","setContentParams","getshowAdd","setshowAdd","getAddData","loadContent","pageindex","totalPage","PageItems","p","Pagination","pageChange","active","p_index","prevData","LazyKeyup","_callback","clearTimeout","orderByThis","orderby","desc","update_modal","msg","is_reset","prevState","Start_Click","contentFileName","fname","duration","fps","frame","CreateKey","Convertfile","frame_progress","RestoreKey2SD","RemoveKeyFromSD","confirm","Deletecontent","callback","setInterval","status","currentFrame","percent","ConversionEnded","clearInterval","Table","striped","bordered","hover","InputGroup","FormControl","aria-label","aria-describedby","onKeyUp","_contentID","_contentTitle","_contentFileName","Dropdown","Menu","ButtonGroup","marginRight","contentTitle","IsConversion","AddCsub","getIsLoading_Cls","setIsLoading_Cls","getError_Cls","tblCls","tblClsHeader","getIsEditCls","setIsEditCls","txtCls","txtClsId","getIsLoading_Sub","setIsLoading_Sub","getError_Sub","setError_Sub","tblSub","tblSubHeader","getIsEditSub","setIsEditSub","txtSub","txtSubId","Calcwidth","PostCls","PostSub","Action_Click","highlight_Edit","highlight_Edit_Sub","h","h_parent","parentElement","borderRight","colSpan","title","AddChap","getRecords","setRecords","tblRecords","getChapterParams","setChapterParams","setAddData","loadChapters","searchBy","_val","RemoteAuthUrl","secret","setSecret","remoteUrl","setRemoteUrl","GetRemoteUrl","url","Settings","havepassword","setHavepassword","havepasswordNotFound","setHavepasswordNotFound","SQliteHavePassword","handleSubmit","Activation","loadDeviceID","getAppId","setAppId","getSerialKey","setSerialKey","getDeviceId","setDeviceId","getClientName","setClientName","getDesc","setDesc","deviceId","RegExp","test","appId","serialKey","clientName","description","activationDate","KeyActivationClient","error_data","as","rows","KeyGenerator","getCopyKeyGen","setCopyKeyGen","disabledRegister","setDisabledRegister","getAllKeyGens","setAllKeyGens","getKeyGenParams","setKeyGenParams","getCardBodyShow","setCardBodyShow","showModal","modalItems","setModalItems","appIDInput","SKeyInput","TimeInput","ToggleTarget","loadAppID","LoadAllKeyGens","copyKeyGen","textArea","createElement","JSON","stringify","appendChild","execCommand","removeChild","LicenceAppId","LicenceKey","creationDate","_appid","RemoveKeyGen","prev","marginTop","disabled","_appID","_SKey","_timestamp","$d","showDefaultIcon","clear","onHide","closeButton","Title","Login","border","hidden","Routes","path","exact","component","render","initialState","loggedInUser","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","App","Component","publish","origin","ReactDOM"],"mappings":"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","file":"static/js/main.04a1e29a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Toast.scss';\r\n\r\nexport function Toast() {\r\n    return (\r\n        <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n        />\r\n    )\r\n}\r\n\r\nexport function ToastAlert(_alert, type = '') {\r\n    let toastRef = toast;\r\n    if (type == 'info' || type == 'i') {\r\n        toastRef = toast.info;\r\n    }\r\n    else if (type == 'success' || type == 's') {\r\n        toastRef = toast.success;\r\n    }\r\n    else if (type == 'warn' || type == 'w') {\r\n        toastRef = toast.warn;\r\n    }\r\n    else if (type == 'error' || type == 'e') {\r\n        toastRef = toast.error;\r\n    }\r\n    toastRef(_alert, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}","import Dexie from 'dexie';\r\n\r\nconst ffmpegLocalStorageDb = () => {\r\n    const ffmpegLocalStorageDb = new Dexie('ffmpegLocalStorageDb');\r\n    ffmpegLocalStorageDb.version(2).stores({ ffmpegLocalStorage: \"ffmpeg_key, value\" });\r\n    ffmpegLocalStorageDb.open().catch(err => {\r\n        console.log(err);\r\n    });\r\n    return ffmpegLocalStorageDb;\r\n};\r\nexport const GetFFMPEGLocalData = async () => {\r\n    return await ffmpegLocalStorageDb().ffmpegLocalStorage.toArray();\r\n};\r\nexport const GetFFMPEGLocalDataByKey = async (key) => {\r\n    const data = await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).first();\r\n    const value = (data || {}).value || null;\r\n    return value;\r\n    // https://dexie.org/docs/Collection/Collection.first()\r\n};\r\n\r\nexport const SetFFMPEGLocalData = async (key, value) => {\r\n    let data = {\r\n        ffmpeg_key: key,\r\n        value\r\n    };\r\n    return await ffmpegLocalStorageDb().ffmpegLocalStorage.add(data);\r\n};\r\nexport const PutFFMPEGLocalData = async (key, val) => {\r\n    const data = await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).first();\r\n    const _value = (data || {}).value || null;\r\n    if (_value) {\r\n        return await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).modify({ value: val });\r\n    }\r\n    else {\r\n        return await ffmpegLocalStorageDb().ffmpegLocalStorage.add({\r\n            ffmpeg_key: key,\r\n            value: val\r\n        });\r\n    }\r\n};\r\nexport const DeleteFFMPEGLocalData = async (key) => {\r\n    return await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).delete();\r\n};\r\n\r\nexport default ffmpegLocalStorageDb;","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport { PutFFMPEGLocalData, GetFFMPEGLocalDataByKey } from './LocalStorage';\r\n\r\nexport const IsActivated = async (baseurl) => {\r\n    try {\r\n        const res = await axios.post(`${baseurl}api/mpeg/IsActivated`);\r\n        return res;\r\n        // console.log(res.data);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\nexport const LocalStorage_IsActivated = async (val) => {\r\n    if (val) {\r\n        await PutFFMPEGLocalData('IsActivate', val);\r\n    } else {\r\n        let data = await GetFFMPEGLocalDataByKey('IsActivate');\r\n        // console.log('IsActivate', data);\r\n        return data;\r\n    }\r\n};\r\nexport const LocalStorage_ActivationExpired = async (val) => {\r\n    if (val) {\r\n        await PutFFMPEGLocalData('ActivationExp', val);\r\n    } else {\r\n        let data = await GetFFMPEGLocalDataByKey('ActivationExp');\r\n        // console.log('ActivationExp', data);\r\n        return data;\r\n    }\r\n};\r\nexport const Today = () => {\r\n    return moment().local().format('YYYY-MM-DD HH:mm:ss');\r\n};\r\nexport const ActivationExpiredDay = () => {\r\n    return moment().local().add(12, 'hours').format('YYYY-MM-DD HH:mm:ss'); // days hours minutes\r\n};\r\nexport const WillActivationExpired = (ActivationExpiredDayStr) => {\r\n    if (ActivationExpiredDayStr === null) return true;\r\n    const _from = moment(ActivationExpiredDayStr, 'YYYY-MM-DD HH:mm:ss');\r\n    const _today = moment(Today(), 'YYYY-MM-DD HH:mm:ss');\r\n    let diff = _from.diff(_today, 'hours'); // _nextday > _today = +ve\r\n    // console.log(_from, _today, diff)\r\n    return diff <= 0;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ToastAlert, Toast } from '../Toast/Toast';\r\nimport {\r\n    IsActivated,\r\n    LocalStorage_ActivationExpired,\r\n    LocalStorage_IsActivated,\r\n    ActivationExpiredDay,\r\n    WillActivationExpired\r\n} from './CommonMethods';\r\n\r\nexport default function CheckIsActivated() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { activation } = useSelector(state => state);\r\n\r\n    useEffect(() => {\r\n        _checkIsActivated();       \r\n    }, []);\r\n\r\n    const _checkIsActivated = async () => {\r\n        dispatch({\r\n            type: 'SET_LOADING_CheckActivation',\r\n            payload: true\r\n        });\r\n        const _IsActivated = await LocalStorage_IsActivated();\r\n        let _ActivationExpired = await LocalStorage_ActivationExpired();\r\n        _ActivationExpired = WillActivationExpired(_ActivationExpired);\r\n        // console.log({ _ActivationExpired, _IsActivated });\r\n        if (_IsActivated === true && _ActivationExpired === false) {\r\n            // console.log('IsActivate fill');\r\n            dispatch({\r\n                type: 'SET_ACTIVATION',\r\n                payload: _IsActivated\r\n            });\r\n        }\r\n        else {\r\n            // console.log('IsActivate empty');\r\n            const res = await IsActivated(baseurl);\r\n            // console.log(res.data);\r\n            const activated = res.data.activated || false;\r\n            const activated_alert = res.data.data || \"\";\r\n            dispatch({\r\n                type: 'SET_ACTIVATION',\r\n                payload: activated\r\n            });\r\n            if (!activated) {\r\n                ToastAlert(activated_alert, 'w');\r\n                const { location: { pathname } } = history;\r\n                if (pathname !== \"/\") {\r\n                    history.push('/');\r\n                }\r\n            } else {\r\n                await LocalStorage_IsActivated(activated);\r\n                await LocalStorage_ActivationExpired(ActivationExpiredDay());\r\n            }\r\n        }\r\n        dispatch({\r\n            type: 'SET_LOADING_CheckActivation',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Toast />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './ProgressAlert.scss';\r\n\r\nexport default function ProgressAlert(props) {\r\n    return (\r\n        <span className=\"C_ProgressAlert progress-1\" >\r\n            {props.alert}\r\n        </span>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\n// import axios from 'axios';\r\n// import moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Entry.scss';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { ToastAlert, Toast } from '../Admin/Toast/Toast';\r\nimport CheckIsActivated from './../Admin/Activation/CheckIsActivated';\r\nimport ProgressAlert from '../Home/ProgressAlert/ProgressAlert';\r\n\r\nexport default function Entry(props) {\r\n    const { activation } = useSelector(state => state);\r\n    // const baseurl = window.ffmpeg_baseurl;\r\n    // const dispatch = useDispatch();\r\n    // const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Container fluid className=\"C_Entry bimg-page-1\">\r\n            {activation.loading_CheckActivation ? <ProgressAlert alert=\"Loading...\" /> : null}\r\n            <CheckIsActivated />\r\n            <Row className=\"h-100\">\r\n                <Col className=\"col-9\">\r\n                </Col>\r\n                <Col className=\"col-3 p-0\">\r\n                    <div className=\"home_btn_row\">\r\n                        {\r\n                            !activation.isActivate ?\r\n                                !activation.loading_CheckActivation && <Link className=\"home_btn\" to=\"/activation\">\r\n                                    <MDBBtn color=\"success\" className=\"\">\r\n                                        Activate\r\n                                        <MDBIcon size=\"lg\" icon=\"shield-alt\" className=\"ml-2\" />\r\n                                    </MDBBtn>\r\n                                </Link> :\r\n                                !activation.isAuth ?\r\n                                    <Link className=\"home_btn\" to=\"/login\">\r\n                                        <MDBBtn color=\"dark\">\r\n                                            Login\r\n                                            <MDBIcon size=\"lg\" icon=\"sign-in-alt\" className=\"ml-2\" />\r\n                                        </MDBBtn>\r\n                                    </Link> :\r\n                                    <Link className=\"home_btn\" to=\"/home\">\r\n                                        <MDBBtn color=\"amber\" className=\"indigo-text\">\r\n                                            Enter\r\n                                            <MDBIcon size=\"lg\" icon=\"caret-right\" className=\"ml-2\" />\r\n                                        </MDBBtn>\r\n                                    </Link>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Header.scss';\r\n// import styled from 'styled-components';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <Container fluid className=\"C_Header bimg-page-2 p-0\">\r\n            <Row className=\"gutter m-0\">\r\n                <Col className=\"col-4 logo-1\"></Col>\r\n                <Col className=\"col-8 head-details\">\r\n                    <div className=\"b-orange\">\r\n                        <Col className=\"col-4 b-red c-white center-xy d-flex\" style={{ flexDirection: 'column' }}>\r\n                            <div>\r\n                                {props.selected_class}\r\n                            </div>\r\n                            <span className=\"subject-details\">\r\n                                {\r\n                                    props.selected_subject ? props.selected_subject : ''\r\n                                }\r\n                            </span>\r\n                        </Col>\r\n                        <Col className=\"col-8 b-green c-white center-xy d-flex\">\r\n                            <span className=\"chaptert-details\">\r\n\r\n                                {props.selected_chapter}\r\n                            </span>\r\n                        </Col>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Content.scss';\r\nimport ProgressAlert from '../ProgressAlert/ProgressAlert';\r\n\r\nexport default function Content(props) {\r\n    const history = useHistory();\r\n\r\n    const Leave = () => {\r\n        // console.log(history);\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Content bimg-page-2 p-0\">\r\n            <Row className=\"h-100 gutter m-0\">\r\n                <Col className=\"col-12 b-orange py-1 b-radius-1 shadow-1\">\r\n                    <Row>\r\n                        <Col className=\"col-2 pl-4\">\r\n                            Shreni\r\n                        </Col>\r\n                        <Col className=\"col-3 pl-4\">\r\n                            Bishoy\r\n                        </Col>\r\n                        <Col className=\"col-7 pl-4\">\r\n                            Adhay Suchi\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col className=\"col-12 b-red b-radius-2 space-3\">\r\n                    <Row className=\"h-100 m-0\">\r\n                        <Col className=\"col-2 pr-0 content-box\">\r\n                            {\r\n                                props.loading_class.enabled ?\r\n                                    <ProgressAlert alert={props.loading_class.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-1\">\r\n                                    {props.my_class}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-3 pr-0 content-box\">\r\n                            {\r\n                                props.loading_subject.enabled ?\r\n                                    <ProgressAlert alert={props.loading_subject.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-2\">\r\n                                    {props.my_subject}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-7 pr-0 content-box\">\r\n                            {\r\n                                props.loading_chapter.enabled ?\r\n                                    <ProgressAlert alert={props.loading_chapter.alert} /> : null\r\n                            }\r\n                            <ul className=\"list-group grp-3\">\r\n                                {props.my_chapter}\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Button variant=\"dark\" size=\"sm\" onClick={Leave}>\r\n                    <MDBIcon icon=\"angle-double-left\" className=\"sign-in mr-1\" size=\"lg\" />\r\n                    Leave\r\n                </Button>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Col, Row, Table, Button, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactHlsPlayer from 'react-hls-player';\r\nimport './Player.scss';\r\n// import cross from '../../img/9.png';\r\nimport { MDBIcon, MDBBtn, MDBContainer, MDBNavbarNav, MDBNavbar } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nexport default function Player({ show, onhide, contentID, chapter }) {\r\n    // https://www.npmjs.com/package/react-hls-player\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const playerRef = React.useRef();\r\n    const playerWrapperRef = React.useRef();\r\n    const [getM3u8Url, setM3u8Url] = useState('');\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n    const playVideo = () => {\r\n        playerRef.current.play();\r\n    };\r\n    const pauseVideo = () => {\r\n        playerRef.current.pause();\r\n    };\r\n    const toggleControls = () => {\r\n        playerRef.current.controls = !playerRef.current.controls;\r\n    };\r\n    const endedVideo = () => {\r\n        playerRef.current.classList.add('fadex');\r\n        setTimeout(() => {\r\n            onhide();\r\n        }, 3100);\r\n    };\r\n    const Resize = () => {\r\n        var actualWidth = window.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth ||\r\n            document.body.offsetWidth;\r\n\r\n        var actualHeight = window.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight ||\r\n            document.body.offsetHeight;\r\n        if (actualWidth < actualHeight) {\r\n            // console.log('w small');\r\n            if (typeof playerWrapperRef.current === 'undefined' || playerWrapperRef.current === null) return;\r\n            playerWrapperRef.current.style.width = '90%';\r\n        } else {\r\n            // console.log('h small');\r\n            if (typeof playerWrapperRef.current === 'undefined' || playerWrapperRef.current === null) return;\r\n            let w = ((3 / 4) * actualWidth) - 50;\r\n            playerWrapperRef.current.style.width = w + 'px';\r\n        }\r\n        // console.log(actualWidth, actualHeight);\r\n    };\r\n\r\n    //#region Hooks\r\n    useEffect(() => {\r\n        document.body.onresize = () => {\r\n            Resize();\r\n        };\r\n        document.body.onblur = function () {\r\n            // console.log('body blur');\r\n            // onhide();\r\n           window.location.reload();\r\n        };\r\n    }, []);\r\n    useEffect(() => {\r\n        if (contentID === null) return;\r\n        const _params = {\r\n            baseurl\r\n        }\r\n        setM3u8Url(`${baseurl}api/mpeg/M3u8info/${contentID}`,{\r\n            params: _params\r\n        });\r\n        Resize();\r\n    }, [show]);\r\n    useEffect(() => {\r\n        // const fireOnVideoStart = () => {\r\n        //     // Do some stuff when the video starts/resumes playing\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('play', fireOnVideoStart);\r\n        // return playerRef.current.removeEventListener('play', fireOnVideoStart);\r\n    }, []);\r\n    useEffect(() => {\r\n        // const fireOnVideoEnd = () => {\r\n        //     // Do some stuff when the video ends\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('ended', fireOnVideoEnd);\r\n        // return playerRef.current.removeEventListener('ended', fireOnVideoEnd);\r\n    }, []);\r\n    //#endregion\r\n\r\n    return (show && <Container fluid className=\"C_Player\">\r\n        <Col className=\"text-center py-3\">\r\n            <div className=\"player-wrapper\" ref={playerWrapperRef}>\r\n                <MDBContainer className=\"text-center\">\r\n                    <Row className=\"header\">\r\n                        <Col className=\"col-12 p-0\">\r\n                            <p className=\"m-0 h-100\">&nbsp;{chapter}</p>\r\n                            <MDBBtn className=\"exit\" color=\"mdb-color\" size=\"sm\" onClick={onhide}>\r\n                                <MDBIcon icon=\"times-circle\" />&nbsp;&nbsp;Close\r\n                            </MDBBtn>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"player-body\">\r\n                        {getM3u8Url.length > 0 ?\r\n                            <ReactHlsPlayer\r\n                                playerRef={playerRef}\r\n                                srcoff=\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"\r\n                                xsrc=\"http://localhost:50017/api/mpeg/M3u8info/20210417-020532-d829654b-bdaf-4c0c-bad6-dd7ce8326e31\"\r\n                                src={getM3u8Url}\r\n                                autoPlay={false}\r\n                                controls={true}\r\n                                width=\"100%\"\r\n                                height=\"auto\"\r\n                                onEnded={endedVideo}\r\n                            /> : null\r\n                        }\r\n                    </Row>\r\n                </MDBContainer>\r\n            </div>\r\n        </Col>\r\n    </Container>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link, Redirect } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './Header/Header';\r\nimport './Home.scss';\r\nimport Content from './Content/Content';\r\nimport axios from 'axios';\r\nimport Player from '../Admin/Player/Player';\r\nimport CheckIsActivated from '../Admin/Activation/CheckIsActivated';\r\nimport { Toast } from '../Admin/Toast/Toast';\r\n\r\nexport default function Home(props) {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n\r\n    const [getLoading_class, setLoading_class] = useState({ enabled: false, alert: '' });\r\n    const [getClasses, setClasses] = useState([]);\r\n    const [getSelectedClass, setSelectedClass] = useState('');\r\n    const [getSelectedClassName, setSelectedClassName] = useState('');\r\n    const [getSelectedChapterName, setSelectedChapterName] = useState('');\r\n\r\n    const [getLoading_subject, setLoading_subject] = useState({ enabled: false, alert: '' });\r\n    const [getSubjects, setSubjects] = useState([]);\r\n    const [getSelectedSubject, setSelectedSubject] = useState('');\r\n    const [getSelectedSubjectName, setSelectedSubjectName] = useState('');\r\n\r\n    const [getLoading_chapter, setLoading_chapter] = useState({ enabled: false, alert: '' });\r\n    const [getChapters, setChapters] = useState([]);\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    // https://www.digitalocean.com/community/tutorials/react-axios-react\r\n\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        body_blue();\r\n        loadClasses();\r\n        loadSubject();\r\n        const query = new URLSearchParams(props.location.search);\r\n        const cls = query.get('cls');\r\n        if (cls)\r\n            setSelectedClass(cls);\r\n\r\n        const sub = query.get('sub');\r\n        if (sub) {\r\n            setSelectedSubject(sub);\r\n        }\r\n\r\n        const cls_name = query.get('cls_name');\r\n        if (cls_name)\r\n            setSelectedClassName(cls_name);\r\n        const chap_name = query.get('chap_name');\r\n        if (chap_name) {\r\n            setSelectedChapterName(chap_name);\r\n        }\r\n\r\n        return body_blue_reset;\r\n    }, []);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n        if (getSelectedClass && getSelectedSubject) {\r\n            // console.log('change class, sub, load chapter');\r\n            loadChapter();\r\n        } else {\r\n            setLoading_chapter({ enabled: true, alert: 'Please Provide Class and subject' });\r\n        }\r\n    }, [getSelectedClass, getSelectedSubject]);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n    }, [getSelectedChapterName]);\r\n    //#endregion\r\n\r\n    //#region Load API\r\n    const loadClasses = () => {\r\n        setLoading_class({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setClasses(res.data.data);\r\n                setLoading_class({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);  \r\n            }).catch(err => {\r\n                setLoading_class({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadSubject = () => {\r\n        setLoading_subject({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setSubjects(res.data.data);\r\n                setLoading_subject({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setLoading_subject({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadChapter = () => {\r\n        setLoading_chapter({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getChapter`, {\r\n            params: {\r\n                cls: getSelectedClass,\r\n                sub: getSelectedSubject\r\n            }\r\n        })\r\n            .then(res => {\r\n                setChapters(res.data.data);\r\n                if (!res.data.data.length) {\r\n                    setLoading_chapter({ enabled: true, alert: 'No data Available' });\r\n                } else {\r\n                    setLoading_chapter({ enabled: false, alert: '' });\r\n                }\r\n                // console.log(res.data);\r\n            }).catch(err => {\r\n                setLoading_chapter({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const mapSelectedSubjectsName = _id => {\r\n        let data = getSubjects.find((item, index) => item.id == _id) || {};\r\n        data = data.subjectName || '';\r\n        setSelectedSubjectName(data);\r\n    };\r\n    //#endregion\r\n\r\n    //#region Create List View\r\n    const getClasses_view = () => {\r\n        let data = [];\r\n        data = getClasses.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_classItem(item) }}>Class {item.className}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getSubjects_view = () => {\r\n        let data = [];\r\n        data = getSubjects.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_subjectItem(item) }}>{item.subjectName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getChapters_view = () => {\r\n        let data = [];\r\n        data = getChapters.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={(e) => { click_chapterItem(e, item) }}>{item.chapterName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const click_classItem = (_item) => {\r\n        setSelectedClass(_item.id);\r\n        setSelectedClassName(`Class ${_item.className}`);\r\n    };\r\n    const click_subjectItem = (_item) => {\r\n        setSelectedSubject(_item.id);\r\n        mapSelectedSubjectsName(_item.id)\r\n    };\r\n    const click_chapterItem = (_e, _item) => {\r\n        // console.log(_item);\r\n        setSelectedChapterName(_item.chapterName);\r\n        highlight(_e, 'chapter_highlight');\r\n        if (_item.contentID == null) return;\r\n        if (_item.contentID == 'NULL') return;\r\n        setPlayerContentID(_item.contentID);\r\n        setPlayerTitle(_item.chapterName);\r\n        setLoadPlayer(true);\r\n    };\r\n    const highlight = (_e, _className) => {\r\n        var _target = _e.target;\r\n        document.querySelectorAll('.' + _className).forEach(i => {\r\n            i.classList.remove(_className);\r\n        });\r\n        _target.classList.add(_className);\r\n    };\r\n    const body_blue = () => {\r\n        document.body.classList.add('body-blue');\r\n    };\r\n    const body_blue_reset = () => {\r\n        document.body.classList.remove('body-blue');\r\n    };\r\n    const urlParamCreation = () => {\r\n        // props.history.push(`/home?cls=${getSelectedClass}&sub=${getSelectedSubject}&cls_name=${getSelectedClassName}&chap_name=${getSelectedChapterName}`);\r\n        const _search = `?cls=${getSelectedClass}&sub=${getSelectedSubject}&cls_name=${getSelectedClassName}&chap_name=${getSelectedChapterName}`;\r\n        props.history.replace({\r\n            search: _search\r\n        });\r\n    }\r\n    //#endregion\r\n\r\n    //#region Player\r\n    const [getLoadPlayer, setLoadPlayer] = useState(false);\r\n    const [getPlayerContentID, setPlayerContentID] = useState(null);\r\n    const [getPlayerTitle, setPlayerTitle] = useState(null);\r\n    const hidePlayer = () => {\r\n        setLoadPlayer(false);\r\n        setPlayerContentID(null);\r\n        setPlayerTitle(null);\r\n    };\r\n    //#endregion\r\n    return (\r\n        <>\r\n        <Toast />\r\n            <CheckIsActivated />\r\n            <Player chapter={getPlayerTitle} show={getLoadPlayer} contentID={getPlayerContentID} onhide={hidePlayer} />\r\n            <Header selected_class={getSelectedClassName} selected_subject={getSelectedSubjectName} selected_chapter={getSelectedChapterName} />\r\n            <Content\r\n                my_class={getClasses_view()} loading_class={getLoading_class}\r\n                my_subject={getSubjects_view()} loading_subject={getLoading_subject}\r\n                my_chapter={getChapters_view()} loading_chapter={getLoading_chapter}\r\n                isAuth\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './BrandAnimation.scss';\r\n\r\nfunction BrandAnimation() {\r\n    return (\r\n        <div className=\"BrandAnimation\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrandAnimation\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, FormControl, Nav, Navbar, NavDropdown, Button } from 'react-bootstrap';\r\nimport './Menubar.scss';\r\n\r\nexport default function Menubar() {\r\n    useEffect(() => {\r\n        // check login\r\n    });\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"Menubar\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#admin\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#admin/upload\">Upload</Nav.Link>\r\n                    <Nav.Link href=\"#admin/conversion\">Conversion</Nav.Link>\r\n                    <Nav.Link href=\"#admin/addclsnsub\">Class-Subs</Nav.Link>\r\n                    <Nav.Link href=\"#admin/addchap\">Chapters</Nav.Link>\r\n                    <Nav.Link href=\"#admin/settings\">Settings</Nav.Link>\r\n                    <Nav.Link href=\"#admin/keygen\">Key Generate</Nav.Link>\r\n                    {\r\n                        /*\r\n                        <NavDropdown title=\"Content\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#admin/mapchap\">Mapping Chapters</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        */\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Admin.scss';\r\nimport BrandAnimation from './BrandAnimation/BrandAnimation';\r\nimport Menubar from './Menubar/Menubar';\r\nimport { Toast } from './Toast/Toast';\r\n\r\nexport default function Admin() {\r\n    useEffect(() => {\r\n    });\r\n\r\n    return (\r\n        <div className=\"C_Admin\">\r\n            <Menubar />\r\n            <Toast />\r\n            <div style={{ position: 'relative' }}>\r\n                <BrandAnimation />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Loading.scss';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"C_Loading\">\r\n            <svg                \r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                viewBox=\"0 0 100 100\"\r\n                preserveAspectRatio=\"xMidYMid\">\r\n                <g transform=\"translate(50 50)\">\r\n                    <g>\r\n                        <animateTransform attributeName=\"transform\" type=\"rotate\" values=\"0;45\" keyTimes=\"0;1\" dur=\"0.2s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <path d=\"M29.491524206117255 -5.5 L37.491524206117255 -5.5 L37.491524206117255 5.5 L29.491524206117255 5.5 A30 30 0 0 1 24.742744050198738 16.964569457146712 L24.742744050198738 16.964569457146712 L30.399598299691117 22.621423706639092 L22.621423706639096 30.399598299691114 L16.964569457146716 24.742744050198734 A30 30 0 0 1 5.5 29.491524206117255 L5.5 29.491524206117255 L5.5 37.491524206117255 L-5.499999999999997 37.491524206117255 L-5.499999999999997 29.491524206117255 A30 30 0 0 1 -16.964569457146705 24.742744050198738 L-16.964569457146705 24.742744050198738 L-22.621423706639085 30.399598299691117 L-30.399598299691117 22.621423706639092 L-24.742744050198738 16.964569457146712 A30 30 0 0 1 -29.491524206117255 5.500000000000009 L-29.491524206117255 5.500000000000009 L-37.491524206117255 5.50000000000001 L-37.491524206117255 -5.500000000000001 L-29.491524206117255 -5.500000000000002 A30 30 0 0 1 -24.742744050198738 -16.964569457146705 L-24.742744050198738 -16.964569457146705 L-30.399598299691117 -22.621423706639085 L-22.621423706639092 -30.399598299691117 L-16.964569457146712 -24.742744050198738 A30 30 0 0 1 -5.500000000000011 -29.491524206117255 L-5.500000000000011 -29.491524206117255 L-5.500000000000012 -37.491524206117255 L5.499999999999998 -37.491524206117255 L5.5 -29.491524206117255 A30 30 0 0 1 16.964569457146702 -24.74274405019874 L16.964569457146702 -24.74274405019874 L22.62142370663908 -30.39959829969112 L30.399598299691117 -22.6214237066391 L24.742744050198738 -16.964569457146716 A30 30 0 0 1 29.491524206117255 -5.500000000000013 M0 -20A20 20 0 1 0 0 20 A20 20 0 1 0 0 -20\" fill=\"#85a2b6\"></path>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Upload.scss';\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport { ToastAlert } from '../../Admin/Toast/Toast';\r\n\r\nexport default function Upload() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [getUnique_ID, setUnique_ID] = useState('');\r\n\r\n    const [getContent_file_label, setContent_file_label] = useState('');\r\n    const [getContent_file_alert, setContent_file_alert] = useState('');\r\n    const [getContent_file, setContent_file] = useState(null);\r\n    const [getFile_Title, setFile_Title] = useState('');\r\n    const [getFile_UploadProgress, setFile_UploadProgress] = useState(0);\r\n    const [getCancelToken, setCancelToken] = useState(null);\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const titleRef = useRef();\r\n\r\n    useEffect(() => {\r\n        setContent_file_label('Select any MP4 file');\r\n        loadUnique_ID();\r\n    }, []);\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if (acceptedFiles.length) {\r\n            const { size, type, name } = acceptedFiles[0];\r\n            // console.log(acceptedFiles[0]);\r\n            if (\"video\" != type.split('/')[0]) {\r\n                setContent_file_alert(\"Please select video file\");\r\n                setContent_file_label('Select any MP4 file');\r\n            } else {\r\n                document.getElementById(\"content_file\").removeAttribute('required');\r\n                setContent_file_alert(\"Size: \" + bytesToSize(size));\r\n                setContent_file_label(name);\r\n                setContent_file(acceptedFiles[0]);\r\n            }\r\n        }\r\n    }, []);\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, multiple: false });\r\n    const loadUnique_ID = () => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/UniquID`)\r\n            .then(res => {\r\n                setUnique_ID(res.data.Id);\r\n                setIsLoading(false);\r\n                // console.log(res.data.Id);\r\n            }).catch(err => {\r\n                setError('Error load unique ID');\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const change_file = (event) => {\r\n        if (event.currentTarget.files) {\r\n            if (event.currentTarget.files.length) {\r\n                const { size, type, name } = event.currentTarget.files[0];\r\n                if (\"video\" != type.split('/')[0]) {\r\n                    setContent_file_alert(\"Please select video file\");\r\n                    setContent_file_label('Select any MP4 file');\r\n                } else {\r\n                    setContent_file_alert(\"Size: \" + bytesToSize(size));\r\n                    setContent_file_label(name);\r\n                    setContent_file(event.currentTarget.files[0]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const bytesToSize = (bytes) => {\r\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes == 0) return '0 Byte';\r\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    };\r\n    const UploadProgress = (progressEvent) => {\r\n        var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n        setFile_UploadProgress(percentCompleted);\r\n    };\r\n    const handleSubmit = (event) => {\r\n        setError('');\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n        const isValid = form.checkValidity();\r\n        if (isValid === false) {\r\n            setError(\"Please provide all field\");\r\n            ToastAlert(\"Please provide all field\", 'i');\r\n            setIsLoading(false);\r\n        } else {\r\n            console.log(\"Ready for upload to server\");\r\n            let formData = new FormData();\r\n            formData.append('body', getContent_file);\r\n            formData.append('uid', getUnique_ID);\r\n            formData.append('file_name', getContent_file_label);\r\n            formData.append('file_title', getFile_Title);\r\n\r\n            const data = { uid: getUnique_ID, file_name: getContent_file_label, file_title: getFile_Title };\r\n            const CancelToken = axios.CancelToken;\r\n            const source = CancelToken.source();\r\n            setCancelToken(source);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                },\r\n                cancelToken: source.token,\r\n                onUploadProgress: function (progressEvent) { UploadProgress(progressEvent); }\r\n            };\r\n\r\n            axios.post(`${baseurl}api/Mpeg/UploadFile`, formData, config).then(function (res) {\r\n                setError('File uploaded successfully.');\r\n                setIsLoading(false);\r\n                ResetAll();\r\n                ToastAlert(\"File uploaded successfully.\", 'i');\r\n                // console.log('File uploaded successfully.');\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                setError('Error post data');\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n        setValidated(true);\r\n    };\r\n    const Cancelupload = () => {\r\n        if (getCancelToken != null) {\r\n            getCancelToken.cancel();\r\n            ResetAll();\r\n        }\r\n    };\r\n    const ResetAll = () => {\r\n        setTimeout(() => {\r\n            loadUnique_ID();\r\n            setContent_file_alert('');\r\n            setContent_file_label('Select any MP4 file');\r\n            setContent_file(null);\r\n            setFile_UploadProgress(0);\r\n            titleRef.current.value = \"\";\r\n            document.querySelector(\"#content_file\").value = '';\r\n            document.getElementById(\"content_file\").setAttribute('required', '');\r\n            setValidated(false);\r\n            setCancelToken(null);\r\n        }, 1000, true);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Upload\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Upload File <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                                <Form.Group controlId=\"Unique_ID\">\r\n                                    <Form.Label>Unique ID</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue={getUnique_ID} placeholder=\"Unique ID\" required readOnly />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"File_Title\">\r\n                                    <Form.Label>File Title</Form.Label>\r\n                                    <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"File title\" required\r\n                                        defaultValue={getFile_Title}\r\n                                        onChange={(e) => { setFile_Title(e.target.value); }} ref={titleRef} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-0\">\r\n                                    <Form.Label>Choose File</Form.Label>\r\n                                    <Form.File name=\"content_file\" id=\"content_file\" custom>\r\n                                        <Form.File.Input required onChange={change_file} />\r\n                                        <Form.File.Label data-browse=\"Browse File\">\r\n                                            {getContent_file_label}\r\n                                        </Form.File.Label>\r\n                                        <Form.Text className=\"text-muted\">\r\n                                            {getContent_file_alert}\r\n                                        </Form.Text>\r\n                                    </Form.File>\r\n                                    <ProgressBar variant=\"success\" animated now={getFile_UploadProgress} />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"dragdrop-frm-group\">\r\n                                    <div {...getRootProps()}>\r\n                                        <input id=\"content_file_drop\" {...getInputProps()} />\r\n                                        <p>Drag 'n' drop some file here, or click to select files</p>\r\n                                    </div>\r\n                                </Form.Group>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" >\r\n                                    <MDBIcon far icon=\"save\" size=\"lg\" />&nbsp;&nbsp;Submit\r\n                                </MDBBtn>\r\n                                <MDBBtn type=\"button\" color=\"indigo\" size=\"sm\" onClick={Cancelupload}>\r\n                                    <MDBIcon icon=\"ban\" />&nbsp;&nbsp;Cancel Upload\r\n                                </MDBBtn>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Modal.scss';\r\nimport { Container, Col, Row, ListGroup, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function Modal({ show, list, onhide, hide_visible }) {\r\n    return (show && <Container fluid className=\"C_Modal\">\r\n        <Col className=\"text-center py-3\">\r\n            {hide_visible && <Button onClick={onhide} variant=\"dark\">Close</Button>}\r\n        </Col>\r\n        <ListGroup>\r\n            {\r\n                list.map((item, index) => {\r\n                    return <ListGroup.Item key={index}>{item}</ListGroup.Item>\r\n                })\r\n            }\r\n        </ListGroup>\r\n    </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, Component } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport Select from 'react-select'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Add.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { ToastAlert } from '../../Toast/Toast';\r\n\r\nexport default function Add({ onhide, data }) {\r\n    // https://react-select.com/home\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [validated, setValidated] = useState(false);\r\n    const txtChapterId = useRef(null);\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        // console.log(data);\r\n        if ('add' == data.e) {\r\n            loadClasses();\r\n            loadSubjects();\r\n            loadContents();\r\n        }\r\n        else if ('edit' == data.e) {\r\n            const { id, chapterName, classId, subjectId, contentID } = data.data;\r\n            txtChapterId.current.value = id;\r\n            elmChapter.current.value = chapterName;\r\n            loadClasses(classId);\r\n            loadSubjects(subjectId);\r\n            loadContents(contentID);\r\n        }\r\n        else if ('attach' == data.e) {\r\n         \r\n        }\r\n\r\n    }, []);\r\n    //#endregion\r\n    const handleSubmit = (event) => {\r\n        setError('');\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n        const isValid = form.checkValidity();\r\n        if (isValid === false || getSelSubject == null || getSelClass == null) {\r\n            setError(\"Please provide all field\");\r\n            setIsLoading(false);\r\n        } else {\r\n            const post_data = { id: txtChapterId.current.value, chapterName: elmChapter.current.value, subjectId: getSelSubject != null ? getSelSubject.value : null, classId: getSelClass != null ? getSelClass.value : null, contentID: getSelContentID != null ? getSelContentID.value : null };\r\n            // console.log(post_data);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                }\r\n            };\r\n            let body = null;\r\n            let post_url = null;\r\n            if ('add' == data.e || 'attach' == data.e) {\r\n                body = { ...post_data };\r\n                post_url = `${baseurl}api/mpeg/AddChapter`;\r\n            }\r\n            if ('edit' == data.e) {\r\n                body = { ...post_data };\r\n                post_url = `${baseurl}api/mpeg/PutChapter`;\r\n            }\r\n            if (post_url == null || body == null) return;\r\n            axios.post(post_url, body, config).then(res => {\r\n                setError(res.data.data);\r\n                setIsLoading(false);\r\n                ToastAlert(res.data.data, 'i');\r\n                onhide();\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                // console.log(err);\r\n                setIsLoading(false);\r\n                setError_Cls('Error to save data');\r\n            });\r\n        }\r\n        setValidated(true);\r\n        isValidate_Subject(getSelSubject);\r\n        isValidate_Class(getSelClass);\r\n        // isValidate_ContentID(getSelContentID);\r\n    };\r\n    const elmChapter = useRef(null);\r\n    //#region Subject Vars\r\n    const Subject_options = [\r\n        { value: '1', label: 'Item 1' },\r\n        { value: '2', label: 'Item 2' }\r\n    ];\r\n    const [getSelSubject, setSelSubject] = useState(null);\r\n    const handleChange_Subject = (e) => {\r\n        setSelSubject(e);\r\n        if (isValidate_Subject_Init.current) {\r\n            isValidate_Subject(e);\r\n        }\r\n    };\r\n    const elmSubject = useRef(null);\r\n    const isValidate_Subject_Init = useRef(false);\r\n    const isValidate_Subject = (data) => {\r\n        LooksGoodShowHide(data, elmSubject, isValidate_Subject_Init);\r\n    };\r\n    const [getAllSub, setAllSub] = useState([]);\r\n    const loadSubjects = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ id, subjectName }) => {\r\n                    return { value: id, label: subjectName }\r\n                });\r\n                setAllSub(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelSubject(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Subject');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    //#region Class Vars\r\n    const Class_options = [\r\n        { value: '3', label: 'Item 3' },\r\n        { value: '4', label: 'Item 4' }\r\n    ];\r\n    const [getSelClass, setSelClass] = useState(null);\r\n    const handleChange_Class = (e) => {\r\n        setSelClass(e);\r\n        if (isValidate_Class_Init.current) {\r\n            isValidate_Class(e);\r\n        }\r\n    };\r\n    const elmClass = useRef(null);\r\n    const isValidate_Class_Init = useRef(false);\r\n    const isValidate_Class = data => {\r\n        LooksGoodShowHide(data, elmClass, isValidate_Class_Init);\r\n    };\r\n    const [getAllCls, setAllClass] = useState([]);\r\n    const loadClasses = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ id, className }) => {\r\n                    return { value: id, label: className }\r\n                });\r\n                setAllClass(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelClass(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Class');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    //#region ContentID Vars\r\n    const ContentID_options = [\r\n        { value: '5', label: 'Item 5' },\r\n        { value: '6', label: 'Item 6' }\r\n    ];\r\n    const [getSelContentID, setSelContentID] = useState(null);\r\n    const handleChange_ContentID = (e) => {\r\n        setSelContentID(e);\r\n        if (isValidate_ContentID_Init.current) {\r\n            isValidate_ContentID(e);\r\n        }\r\n    };\r\n    const elmContentID = useRef(null);\r\n    const isValidate_ContentID_Init = useRef(false);\r\n    const isValidate_ContentID = data => {\r\n        LooksGoodShowHide(data, elmContentID, isValidate_ContentID_Init);\r\n    };\r\n    const [getAllContents, setAllContents] = useState([]);\r\n    const loadContents = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        const _params = {\r\n            _id\r\n        };\r\n        axios.get(`${baseurl}api/mpeg/getContent`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ contentID }) => {\r\n                    return { value: contentID, label: contentID }\r\n                });\r\n                data.unshift({ value: null, label: 'None' });\r\n                setAllContents(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelContentID(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Class');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    const LooksGoodShowHide = (data, refElm, refValidateInit) => {\r\n        if (refElm.current) {\r\n            let elm = refElm.current.select.controlRef;\r\n            if (elm) {\r\n                refValidateInit.current = true;\r\n                if (data == null) {\r\n                    elm.style.borderColor = \"#dc3545\";  //red\r\n                } else {\r\n                    elm.style.borderColor = \"#28a745\"; // green\r\n                    let lookGoodElm = elm.parentNode.nextSibling\r\n                    if (lookGoodElm) {\r\n                        if (lookGoodElm.classList.contains('valid-feedback')) {\r\n                            lookGoodElm.style.display = 'block';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddChap_Add\">\r\n            <Row>\r\n                <Col className=\"col-md-8 col-lg-6 pt-3 mx-auto\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Add chapter <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                                <input type=\"hidden\" ref={txtChapterId} />\r\n                                <Form.Group controlId=\"chapterName\">\r\n                                    <Form.Label>Chapter Name</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue=\"\" ref={elmChapter} placeholder=\"Chapter Name\" required />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"subject\">\r\n                                    <Form.Label>Subject</Form.Label>\r\n                                    <Select value={getSelSubject} options={getAllSub} onChange={handleChange_Subject} ref={elmSubject} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"class\">\r\n                                    <Form.Label>Class</Form.Label>\r\n                                    <Select value={getSelClass} options={getAllCls} onChange={handleChange_Class} ref={elmClass} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"contentID\">\r\n                                    <Form.Label>content ID</Form.Label>\r\n                                    <Select value={getSelContentID} options={getAllContents} onChange={handleChange_ContentID} ref={elmContentID} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" >\r\n                                    <MDBIcon far icon=\"save\" size=\"lg\" />&nbsp;&nbsp;Submit\r\n                                </MDBBtn>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" onClick={onhide} >\r\n                                    <MDBIcon icon=\"times-circle\" size=\"lg\" />&nbsp;&nbsp;Close\r\n                                </MDBBtn>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Col, Row, Table, Button, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport './Conversion.scss';\r\nimport Select from 'react-select'\r\nimport axios from 'axios';\r\nimport Modal from '../Modal/Modal';\r\nimport Loading from '../Loading/Loading';\r\nimport Player from './../Player/Player';\r\nimport Add from '../AddChap/Add/Add';\r\nimport { ToastAlert } from '../Toast/Toast';\r\n\r\nexport default function Conversion(props) {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [getContent, setContent] = useState([]);\r\n    const [getSelectedLimit, setSelectedLimit] = useState(null);\r\n    let CProgressTimer = useRef(null);\r\n    let LazyKeyupTimer = useRef(null);\r\n    let contentInput = useRef(null);\r\n    let contentInputT = useRef(null);\r\n    let contentInputF = useRef(null);\r\n\r\n    const [getModalData, setModalData] = useState([]);\r\n    const [getShowModal, setShowModal] = useState(false);\r\n    const [getShowModalHideBtn, setShowModalHideBtn] = useState(false);\r\n    const [getPageItems, setPageItems] = useState([]);\r\n    const [getContentParams, setContentParams] = useState({\r\n        \"pageindex\": 0,\r\n        \"limit\": 5\r\n    });\r\n    const Limitoptions = [\r\n        { value: '5', label: '5' },\r\n        { value: '10', label: '10' },\r\n        { value: '50', label: '50' },\r\n        { value: '100', label: '100' }\r\n    ];\r\n\r\n    const [getLoadPlayer, setLoadPlayer] = useState(false);\r\n    const [getPlayerContentID, setPlayerContentID] = useState(null);\r\n\r\n    const [getshowAdd, setshowAdd] = useState(false);\r\n    const [getAddData, setAddData] = useState({});\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadContent(getContentParams);\r\n        setSelectedLimit({ value: '5', label: '5' });\r\n    }, []);\r\n    //#endregion\r\n\r\n    const loadContent = (_params) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getContentPage`, {\r\n            params: _params\r\n        }).then(res => {\r\n            setContent(res.data.data);\r\n            let { pageindex, totalPage } = res.data;\r\n            let PageItems = [];\r\n            for (let p = 0; p < totalPage; p++) {\r\n                PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>{p + 1}</Pagination.Item>);\r\n            }\r\n            setPageItems(PageItems);\r\n            setIsLoading(false);\r\n            setError('');\r\n            // console.log(res.data);\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            setError('Error loading Content');\r\n        });\r\n    };\r\n    const pageChange = p_index => {\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, \"pageindex\": p_index };\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const LazyKeyup = (_callback) => {\r\n        clearTimeout(LazyKeyupTimer.current);\r\n        LazyKeyupTimer.current = setTimeout(() => {\r\n            _callback();\r\n            // _callback.call(this, _args);\r\n        }, 1000);\r\n    };\r\n    const searchByContentID = _contentID => {\r\n        contentInputT.current.value = '';\r\n        contentInputF.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentID\": _contentID, \"pageindex\": 0 };\r\n                delete data[\"contentTitle\"];\r\n                delete data[\"contentFileName\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n    const searchByContentTitle = _contentTitle => {\r\n        contentInput.current.value = '';\r\n        contentInputF.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentTitle\": _contentTitle, \"pageindex\": 0 };\r\n                delete data[\"contentID\"];\r\n                delete data[\"contentFileName\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n    const orderByThis = (orderby, desc) => {\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, orderby, desc };\r\n            // console.log(data);\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const handleChange_limit = (e) => {\r\n        setSelectedLimit(e);\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, \"limit\": e.value, \"pageindex\": 0 };\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const searchByContentFile = _contentFileName => {\r\n        contentInput.current.value = '';\r\n        contentInputT.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentFileName\": _contentFileName, \"pageindex\": 0 };\r\n                delete data[\"contentID\"];\r\n                delete data[\"contentTitle\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n\r\n    const update_modal = (msg, is_reset) => {\r\n        if (msg == null) {\r\n            setModalData([]);\r\n            return;\r\n        }\r\n        if ('string' === typeof msg) {\r\n            if (!is_reset) {\r\n                setModalData(prevState => [msg, ...prevState]);\r\n            } else {\r\n                setModalData([msg]);\r\n            }\r\n        }\r\n    };\r\n    const Start_Click = ({ contentID, contentFileName }, e) => {\r\n        if ('start' === e) {\r\n            setShowModal(true);\r\n            axios.get(`${baseurl}api/mpeg/MediaInfo/${contentID}`, {\r\n                params: {\r\n                    fname: contentFileName,\r\n                }\r\n            }).then(res => {\r\n                // console.log(res);\r\n                let { duration, fps, frame } = res.data;\r\n                if (typeof duration === 'undefined') {\r\n                    update_modal(`Video not exist!`, false);\r\n                    setShowModalHideBtn(true);\r\n                    return;\r\n                }\r\n                update_modal('Ready for Conversion...', false);\r\n                update_modal(`Video duration ${duration}, fps ${fps} and frame ${frame}`, false);\r\n                CreateKey(contentID, function () {\r\n                    Convertfile(contentID, contentFileName);\r\n                    frame_progress(contentID, res.data);\r\n                });\r\n            }).catch(err => {\r\n                console.log(err);\r\n                update_modal(err, false);\r\n                setShowModalHideBtn(true);\r\n            });\r\n        }\r\n        else if ('progress' === e) {\r\n            setShowModal(true);\r\n            axios.get(`${baseurl}api/mpeg/MediaInfo/${contentID}`, {\r\n                params: {\r\n                    fname: contentFileName,\r\n                }\r\n            })\r\n                .then(res => {\r\n                    let { duration, fps, frame } = res.data;\r\n                    if (typeof duration === 'undefined') {\r\n                        update_modal(`Video not exist!`, false);\r\n                        setShowModalHideBtn(true);\r\n                        return;\r\n                    }\r\n                    update_modal(`Video duration ${duration}, fps ${fps} and frame ${frame}`, false);\r\n                    frame_progress(contentID, res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    update_modal(err, false);\r\n                    setShowModalHideBtn(true);\r\n                });\r\n        }\r\n        else if ('restore' === e) {\r\n            // setShowModal(true);\r\n            RestoreKey2SD(contentID);\r\n        }\r\n        else if ('remove' === e) {\r\n            // setShowModal(true);\r\n            RemoveKeyFromSD(contentID);\r\n        }\r\n        else if ('delete' === e) {\r\n            if (confirm('are you sure to delete ' + contentID)) {\r\n                Deletecontent(contentID);\r\n            }\r\n        }\r\n        else if ('play' === e) {\r\n            setPlayerContentID(contentID);\r\n            setLoadPlayer(true);\r\n        }\r\n        else if ('attach' === e) {\r\n\r\n        }\r\n    };\r\n    const CreateKey = (contentID, callback) => {\r\n        update_modal('Ready for generate key file...', false);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/CreateKey`, body, config).then(res => {\r\n            // console.log(res);\r\n            update_modal('key generated successfully', false);\r\n            ToastAlert('key generated successfully', 'i');\r\n            callback();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const Convertfile = (contentID, contentFileName) => {\r\n        update_modal('Ready for encryption...', false);\r\n        axios.get(`${baseurl}api/mpeg/Conversion/${contentID}`, {\r\n            params: {\r\n                fname: contentFileName,\r\n            }\r\n        }).then(res => {\r\n            // console.log(res);\r\n            update_modal('video file encrypted successfully...', false);\r\n            ToastAlert('video file encrypted successfully', 'i');\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const frame_progress = (contentID, { frame }) => {\r\n        update_modal('keep watching the encryption progress...', false);\r\n        CProgressTimer.current = setInterval(() => {\r\n            axios.get(`${baseurl}api/mpeg/ConversionProgressInfo/${contentID}`, {\r\n                params: {}\r\n            }).then(res => {\r\n                // console.log(res.data);\r\n                const { status, currentFrame } = res.data;\r\n                if ('continue' === status) {\r\n                    let percent = parseInt((currentFrame / frame) * 100);\r\n                    // setCProgress(percent + '%');\r\n                    update_modal(`encryption progress ${percent}%`, false);\r\n                }\r\n                else if ('end' === status) {\r\n                    // console.log('end');\r\n                    update_modal(`encryption progress 100% completed`, false);\r\n                    ConversionEnded(contentID, function () {\r\n                        clearInterval(CProgressTimer.current);\r\n                        setShowModalHideBtn(true);\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                clearInterval(CProgressTimer.current);\r\n                update_modal(err, false);\r\n                setShowModalHideBtn(true);\r\n            });\r\n        }, 10000);\r\n    };\r\n    const ConversionEnded = (contentID, callback) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/ConversionEnded`, body, config).then(res => {\r\n            console.log(res);\r\n            update_modal(res.data.data, false);\r\n            ToastAlert(res.data.data, 'i');\r\n            callback();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const RestoreKey2SD = (contentID) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/RestoreKey2SD`, body, config).then(res => {\r\n            // console.log(res);\r\n            // update_modal(res.data.data, false);\r\n            // setShowModalHideBtn(true);\r\n            ToastAlert(res.data.data,'i');\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const Deletecontent = (contentID) => {\r\n        setIsLoading(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/Deletecontent`, body, config).then(res => {\r\n            setIsLoading(false);\r\n            // console.log(res);\r\n            ToastAlert(res.data.data,'i');\r\n            loadContent(getContentParams);\r\n        }).catch(err => {\r\n            setError('Error');\r\n            setIsLoading(false);\r\n            // console.log(err);\r\n            loadContent(getContentParams);\r\n        });\r\n    };\r\n    const RemoveKeyFromSD = (contentID) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/RemoveKeyFromSD`, body, config).then(res => {\r\n            // console.log(res);\r\n            // update_modal(res.data.data, false);\r\n            // setShowModalHideBtn(true);\r\n            ToastAlert(res.data.data,'i');\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const hideModal = () => {\r\n        update_modal(null, true);\r\n        setShowModal(false);\r\n        setShowModalHideBtn(false);\r\n        loadContent(getContentParams);\r\n    };\r\n    const hidePlayer = () => {\r\n        setLoadPlayer(false);\r\n    };\r\n    const hideAddForm = () => {\r\n        setshowAdd(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Conversion\">\r\n            <Player show={getLoadPlayer} contentID={getPlayerContentID} onhide={hidePlayer} />\r\n            <Modal show={getShowModal} list={getModalData} onhide={hideModal} hide_visible={getShowModalHideBtn} />\r\n            <Row>\r\n                {\r\n                    getshowAdd ? <Add onhide={hideAddForm} data={getAddData} /> : null\r\n                }\r\n            </Row>\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-12 pt-3\">\r\n                    <span className=\"loading-error\">{getError}</span>\r\n                    {\r\n                        getIsLoading ? <Loading /> : null\r\n                    }\r\n                </Col>\r\n                <Col className=\"col-12 pt-3\">\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content ID\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by ID\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentID(e.target.value); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content Title\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by Title\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentTitle(e.target.value); }}\r\n                                                ref={contentInputT}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        File Name\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by File Name\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentFile(e.target.value); }}\r\n                                                ref={contentInputF}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div></th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Action\r\n                                        <Dropdown>\r\n                                            <Dropdown.Toggle size=\"sm\" variant=\"light\" id=\"dropdown-basic\">\r\n                                                Sort By &nbsp;&nbsp;\r\n                                            </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentID', 'false'); }}>ID</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentID', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentTitle', 'false'); }}>Title</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentTitle', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentFileName', 'false'); }}>File Name</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentFileName', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                getContent.map((item, index) => {\r\n                                    return <tr key={index}>\r\n                                        <td>{item.contentID}</td>\r\n                                        <td>{item.contentTitle}</td>\r\n                                        <td>{item.contentFileName}</td>\r\n                                        <td className=\"action-box\">{\r\n                                            item.IsConversion == '0' ?\r\n                                                <span>\r\n                                                    <Button variant=\"outline-info\" size=\"sm\" className=\"mr-1 mb-1\" onClick={() => Start_Click(item, 'start')}>Start</Button>\r\n                                                    <Button variant=\"outline-danger\" size=\"sm\" className=\"mb-1\" onClick={() => Start_Click(item, 'delete')}>Delete</Button>\r\n                                                </span> :\r\n                                                item.IsConversion == '1' ?\r\n                                                    <Button variant=\"outline-info\" size=\"sm\" onClick={() => Start_Click(item, 'progress')}>Progress</Button> :\r\n                                                    <span>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle variant=\"info\" size=\"sm\" id=\"dropdown-content\" className=\"mr-1 mb-1\">\r\n                                                                Content &nbsp;\r\n                                                            </Dropdown.Toggle>\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item onClick={() => Start_Click(item, 'play')}>Play</Dropdown.Item>\r\n                                                                {/* <Dropdown.Item onClick={() => Start_Click(item, 'attach')}>Attach Chapter</Dropdown.Item> */}\r\n                                                                <Dropdown.Item className=\"danger\" onClick={() => Start_Click(item, 'delete')}>Delete</Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle variant=\"info\" size=\"sm\" id=\"dropdown-key\" className=\"mb-1\">\r\n                                                                Key &nbsp;\r\n                                                            </Dropdown.Toggle>\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item onClick={() => Start_Click(item, 'restore')}>Restore to device</Dropdown.Item>\r\n                                                                <Dropdown.Item className=\"danger\" onClick={() => Start_Click(item, 'remove')}>Remove from device</Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                    </span>\r\n                                        }\r\n                                        </td>\r\n                                    </tr>;\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-4 pt-3\">\r\n                    <table className=\"lmt\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"y\"> Limit: </div>\r\n                                    <Select value={getSelectedLimit} className=\"x\" options={Limitoptions} onChange={handleChange_limit} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n                <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n                    <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddCsub.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { ToastAlert } from '../Toast/Toast';\r\n\r\nexport default function AddCsub() {\r\n    // https://mdbootstrap.com/docs/react/content/icons-list/\r\n    // https://mdbootstrap.com/docs/react/content/icons-usage/\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    //#region Class\r\n    const [getIsLoading_Cls, setIsLoading_Cls] = useState(false);\r\n    const [getError_Cls, setError_Cls] = useState('');\r\n    const [getAllCls, setAllClass] = useState([]);\r\n    let tblCls = useRef(null);\r\n    let tblClsHeader = useRef(null);\r\n\r\n    const [getIsEditCls, setIsEditCls] = useState(false);\r\n    let txtCls = useRef(null);\r\n    let txtClsId = useRef(null);\r\n    //#endregion\r\n\r\n    //#region Subject\r\n    const [getIsLoading_Sub, setIsLoading_Sub] = useState(false);\r\n    const [getError_Sub, setError_Sub] = useState('');\r\n    const [getAllSub, setAllSub] = useState([]);\r\n    let tblSub = useRef(null);\r\n    let tblSubHeader = useRef(null);\r\n\r\n    const [getIsEditSub, setIsEditSub] = useState(false);\r\n    let txtSub = useRef(null);\r\n    let txtSubId = useRef(null);\r\n    //#endregion\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadClasses();\r\n        loadSubjects();\r\n    }, []);\r\n    //#endregion\r\n    const loadClasses = () => {\r\n        setIsLoading_Cls(true);\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setAllClass(res.data.data);\r\n                Calcwidth('cls');\r\n                setIsLoading_Cls(false);\r\n                setError_Cls('');\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setIsLoading_Cls(false);\r\n                setError_Cls('Error loading Class');\r\n            });\r\n    };\r\n    const loadSubjects = () => {\r\n        setIsLoading_Sub(true);\r\n        setError_Sub('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setAllSub(res.data.data);\r\n                Calcwidth('sub');\r\n                setIsLoading_Sub(false);\r\n                setError_Sub('');\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setIsLoading_Sub(false);\r\n                setError_Sub('Error loading Subject');\r\n            });\r\n    };\r\n    const PostCls = ({ name, id, e }) => {\r\n        setIsLoading_Cls(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        let body = null;\r\n        let post_url = null;\r\n\r\n        if ('update_cls' === e) {\r\n            body = { name, id };\r\n            post_url = `${baseurl}api/mpeg/PutClass`;\r\n        }\r\n        else if ('add_cls' === e) {\r\n            body = { name };\r\n            post_url = `${baseurl}api/mpeg/AddClass`;\r\n        }\r\n        else if ('delete_cls' === e) {\r\n            body = { id };\r\n            post_url = `${baseurl}api/mpeg/RemoveClass`;\r\n        }\r\n        if (post_url == null || body == null) return;\r\n        axios.post(post_url, body, config).then(res => {\r\n            setError_Cls(res.data.data);\r\n            // console.log(res);\r\n            ToastAlert(res.data.data, 'info');\r\n            loadClasses();\r\n        }).catch(err => {\r\n            // console.log(err);\r\n            setError_Cls('Error to save data');\r\n        });\r\n    };\r\n    const PostSub = ({ name, id, e }) => {\r\n        setIsLoading_Sub(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        let body = null;\r\n        let post_url = null;\r\n\r\n        if ('update_sub' === e) {\r\n            body = { name, id };\r\n            post_url = `${baseurl}api/mpeg/PutSubject`;\r\n        }\r\n        else if ('add_sub' === e) {\r\n            body = { name };\r\n            post_url = `${baseurl}api/mpeg/AddSubject`;\r\n        }\r\n        else if ('delete_sub' === e) {\r\n            body = { id };\r\n            post_url = `${baseurl}api/mpeg/RemoveSubject`;\r\n        }\r\n        if (post_url == null || body == null) return;\r\n        axios.post(post_url, body, config).then(res => {\r\n            setError_Sub(res.data.data);\r\n            // console.log(res);\r\n            loadSubjects();\r\n            ToastAlert(res.data.data, 'info');\r\n        }).catch(err => {\r\n            // console.log(err);\r\n            setError_Sub('Error to save data');\r\n        });\r\n    };\r\n    const Action_Click = ({ id, className, subjectName }, e) => {\r\n        if ('edit_cls' === e) {\r\n            // console.log(id, className, 'edit_cls');\r\n            txtClsId.current.value = id;\r\n            txtCls.current.value = className;\r\n            setIsEditCls(true);\r\n            highlight_Edit(id);\r\n        }\r\n        else if ('update_cls' === e) {\r\n            // console.log('update_cls', txtClsId.current.value, txtCls.current.value);\r\n            if (txtCls.current.value == '') return;\r\n            if (txtClsId.current.value == '') return;\r\n            PostCls({ name: txtCls.current.value, id: txtClsId.current.value, e });\r\n            setTimeout(() => {\r\n                txtClsId.current.value = '';\r\n                txtCls.current.value = '';\r\n                setIsEditCls(false);\r\n                highlight_Edit(null);\r\n            }, 200);\r\n        }\r\n        else if ('delete_cls' === e) {\r\n            // console.log(id, 'delete_cls');\r\n            if (id == '') return;\r\n            PostCls({ id, e });\r\n        }\r\n        else if ('add_cls' === e) {\r\n            // console.log('add_cls', txtCls.current.value);\r\n            if (txtCls.current.value == '') {\r\n                ToastAlert('Please provide class name', 'w');\r\n                return;\r\n            }\r\n            PostCls({ name: txtCls.current.value, e });\r\n            setTimeout(() => {\r\n                txtCls.current.value = '';\r\n            }, 200);\r\n        }\r\n        else if ('edit_sub' === e) {\r\n            // console.log(id, subjectName, 'edit_sub');\r\n            txtSubId.current.value = id;\r\n            txtSub.current.value = subjectName;\r\n            setIsEditSub(true);\r\n            highlight_Edit_Sub(id);\r\n        }\r\n        else if ('update_sub' === e) {\r\n            // console.log('update_sub', txtSubId.current.value, txtSub.current.value);\r\n            if (txtSub.current.value == '') return;\r\n            if (txtSubId.current.value == '') return;\r\n            PostSub({ name: txtSub.current.value, id: txtSubId.current.value, e });\r\n            setTimeout(() => {\r\n                txtSubId.current.value = '';\r\n                txtSub.current.value = '';\r\n                setIsEditSub(false);\r\n                highlight_Edit(null);\r\n                highlight_Edit_Sub(null);\r\n            }, 200);\r\n        }\r\n        else if ('delete_sub' === e) {\r\n            if (id == '') return;\r\n            PostSub({ id, e });\r\n        }\r\n        else if ('add_sub' === e) {\r\n            if (txtSub.current.value == '') {\r\n                ToastAlert('Please provide subject name', 'w');\r\n                return;\r\n            }\r\n            PostSub({ name: txtSub.current.value, e });\r\n            setTimeout(() => {\r\n                txtSub.current.value = '';\r\n            }, 200);\r\n        }\r\n    };\r\n    const Calcwidth = (e) => {\r\n        if ('cls' === e) {\r\n            if (typeof tblCls.current === 'undefined') return;\r\n            let h = parseInt(tblCls.current.clientHeight);\r\n            let h_parent = parseInt(tblCls.current.parentElement.clientHeight);\r\n            if (typeof tblClsHeader.current === 'undefined') return;\r\n            if (h > h_parent) {\r\n                tblClsHeader.current.style.borderRight = '.9rem solid #cecece';\r\n                // tblClsHeader.current.style.width = '98%';\r\n            } else {\r\n                tblClsHeader.current.style.borderRight = '0rem solid #cecece';\r\n                // tblClsHeader.current.style.width = '100%';\r\n            }\r\n        } else if ('sub' === e) {\r\n            if (typeof tblSub.current === 'undefined') return;\r\n            let h = parseInt(tblSub.current.clientHeight);\r\n            let h_parent = parseInt(tblSub.current.parentElement.clientHeight);\r\n            if (typeof tblClsHeader.current === 'undefined') return;\r\n            if (h > h_parent) {\r\n                tblSubHeader.current.style.borderRight = '.9rem solid #cecece';\r\n            }\r\n            else {\r\n                tblSubHeader.current.style.borderRight = '0rem solid #cecece';\r\n            }\r\n        }\r\n    };\r\n    const highlight_Edit = (id) => {\r\n        document.querySelectorAll('.tr_cls').forEach(i => {\r\n            i.classList.remove('active');\r\n        });\r\n        if (id)\r\n            document.querySelector('.tr_cls_' + id).classList.add('active');\r\n    };\r\n    const highlight_Edit_Sub = (id) => {\r\n        document.querySelectorAll('.tr_sub').forEach(i => {\r\n            i.classList.remove('active');\r\n        });\r\n        if (id)\r\n            document.querySelector('.tr_sub_' + id).classList.add('active');\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddCsub\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-sm-12 col-md-10 col-lg-6 pt-3 mx-auto\">\r\n                    <Table striped bordered hover className=\"mb-0\" ref={tblClsHeader}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"3\">\r\n                                    Class List\r\n                                    <span className=\"loading-error\">{getError_Cls}</span>\r\n                                    {\r\n                                        getIsLoading_Cls ? <Loading /> : null\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style={{ width: '10%' }}>#</th>\r\n                                <th style={{ width: '70%' }}>Description</th>\r\n                                <th style={{ width: '20%' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblCls} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getAllCls.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_cls tr_cls_' + item.id}>\r\n                                            <td style={{ width: '10%' }}>{index + 1}</td>\r\n                                            <td style={{ width: '70%' }}>{item.className}</td>\r\n                                            <td style={{ width: '20%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit_cls')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Delete Class\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_cls')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <Form noValidate>\r\n                        <Table striped bordered hover className=\"mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td style={{ width: '10%' }}></td>\r\n                                    <td style={{ width: '70%' }} className=\"py-1\">\r\n                                        <Form.Group controlId=\"Class_Name\" className=\"my-0\">\r\n                                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Class Name\" required\r\n                                                defaultValue=\"\" ref={txtCls} />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td className=\"actions py-1\" style={{ width: '20%' }}>\r\n                                        <input type=\"hidden\" ref={txtClsId} />\r\n                                        {getIsEditCls ?\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'update_cls')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"save\" className=\"ml-2\" /> Update\r\n                                            </MDBBtn> :\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_cls')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" /> Add\r\n                                            </MDBBtn>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n                    </Form>\r\n                </Col>\r\n                <Col className=\"col-sm-12 col-md-10 col-lg-6 pt-3 mx-auto Subject\">\r\n                    <Table striped bordered hover className=\"mb-0\" ref={tblSubHeader}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"3\">\r\n                                    Subject List\r\n                                    <span className=\"loading-error\">{getError_Sub}</span>\r\n                                    {\r\n                                        getIsLoading_Sub ? <Loading /> : null\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style={{ width: '10%' }}>#</th>\r\n                                <th style={{ width: '70%' }}>Description</th>\r\n                                <th style={{ width: '20%' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblSub} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getAllSub.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_sub tr_sub_' + item.id}>\r\n                                            <td style={{ width: '10%' }}>{index + 1}</td>\r\n                                            <td style={{ width: '70%' }}>{item.subjectName}</td>\r\n                                            <td style={{ width: '20%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit_sub')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Delete Class\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_sub')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <Form noValidate>\r\n                        <Table striped bordered hover className=\"mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td style={{ width: '10%' }}></td>\r\n                                    <td style={{ width: '70%' }} className=\"py-1\">\r\n                                        <Form.Group controlId=\"Subject_Name\" className=\"my-0\">\r\n                                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Subject Name\" required\r\n                                                defaultValue=\"\" ref={txtSub} />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td className=\"actions py-1\" style={{ width: '20%' }}>\r\n                                        <input type=\"hidden\" ref={txtSubId} />\r\n                                        {getIsEditSub ?\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'update_sub')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"save\" className=\"ml-2\" /> Update\r\n                                            </MDBBtn> :\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_sub')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" /> Add\r\n                                            </MDBBtn>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, Component } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport Select from 'react-select'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddChap.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport Add from './Add/Add';\r\n\r\nexport default function AddChap() {\r\n    // https://react-select.com/home\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    let contentInput = useRef(null);\r\n    const [getRecords, setRecords] = useState([]);\r\n    const [getSelectedLimit, setSelectedLimit] = useState(null);\r\n    let tblRecords = useRef(null);\r\n    let LazyKeyupTimer = useRef(null);\r\n    const [getPageItems, setPageItems] = useState([]);\r\n    const [getChapterParams, setChapterParams] = useState({\r\n        \"pageindex\": 0,\r\n        \"limit\": 10\r\n    });\r\n    const Limitoptions = [\r\n        { value: '10', label: '10' },\r\n        { value: '50', label: '50' },\r\n        { value: '100', label: '100' },\r\n    ]\r\n    const [getshowAdd, setshowAdd] = useState(false);\r\n    const [getAddData, setAddData] = useState({});\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadChapters(getChapterParams);\r\n        setSelectedLimit({ value: '10', label: '10' });\r\n    }, []);\r\n    //#endregion  \r\n    const loadChapters = (_params) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getChapterFilter`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                setRecords(res.data.data);\r\n                let { pageindex, totalPage } = res.data;\r\n                //#region Pagination\r\n                let PageItems = [];\r\n                if (parseInt(pageindex) > 0) {\r\n                    PageItems.push(<Pagination.Item key={'prev'} onClick={() => { pageChange(parseInt(pageindex) - 1) }}>\r\n                        <MDBIcon icon=\"angle-double-left\" size=\"lg\" />\r\n                    </Pagination.Item>);\r\n                }\r\n                for (let p = 0; p < totalPage; p++) {\r\n                    PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>\r\n                        {parseInt(p) + 1}\r\n                    </Pagination.Item>);\r\n                }\r\n                if (parseInt(pageindex) < parseInt(totalPage)) {\r\n                    PageItems.push(<Pagination.Item key={'next'} onClick={() => { pageChange(parseInt(pageindex) + 1) }}>\r\n                        <MDBIcon icon=\"angle-double-right\" size=\"lg\" />\r\n                    </Pagination.Item>);\r\n                }\r\n                //#endregion\r\n                setPageItems(PageItems);\r\n                setIsLoading(false);\r\n                setError('');\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Chapter');\r\n            });\r\n    };\r\n    const pageChange = p_index => {\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, \"pageindex\": p_index };\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const orderByThis = (orderby, desc) => {\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, orderby, desc,\"pageindex\": 0 };\r\n            // console.log(data);\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const searchBy = (_val, e) => {\r\n        // console.log(_val, e);\r\n        if ('chap' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"chapterName\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('cls' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"className\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('sub' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"subjectName\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('content_id' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"contentID\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n    };\r\n    const LazyKeyup = (_callback) => {\r\n        clearTimeout(LazyKeyupTimer.current);\r\n        LazyKeyupTimer.current = setTimeout(() => {\r\n            _callback();\r\n            // _callback.call(this, _args);\r\n        }, 1000);\r\n    };\r\n    const handleChange_limit = (e) => {\r\n        setSelectedLimit(e);\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, \"limit\": e.value, \"pageindex\": 0 };\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const Action_Click = (item, e) => {\r\n        if ('add_new' == e) {\r\n            setAddData({\r\n                e: 'add'\r\n            });\r\n            setshowAdd(true);\r\n        }\r\n        else if ('edit' == e) {\r\n            setAddData({\r\n                e: 'edit',\r\n                data: item\r\n            });\r\n            setshowAdd(true);\r\n        }\r\n        else if ('remove' == e) {\r\n            if (!confirm('are you sure to delete?')) return;\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                }\r\n            };\r\n            let body = { id: item.id };\r\n            let post_url = `${baseurl}api/mpeg/RemoveChapter`;\r\n            if (post_url == null || body == null) return;\r\n            axios.post(post_url, body, config).then(res => {\r\n                setError(res.data.data);\r\n                setIsLoading(false);\r\n                loadChapters(getChapterParams);\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                // console.log(err);\r\n                setIsLoading(false);\r\n                setError_Cls('Error to delete data');\r\n            });\r\n        }\r\n    };\r\n    const hideAddForm = () => {\r\n        loadChapters(getChapterParams);\r\n        setshowAdd(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddChap\">\r\n            <Row>\r\n                {\r\n                    getshowAdd ? <Add onhide={hideAddForm} data={getAddData} /> : null\r\n                }\r\n            </Row>\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-12 pt-3\">\r\n                    <span className=\"loading-error\">{getError}</span>\r\n                    {\r\n                        getIsLoading ? <Loading /> : null\r\n                    }\r\n                </Col>\r\n                <Col className=\"col-12\">\r\n                    <Table striped bordered hover className=\"mb-0\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '30%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Chapter\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'chap'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '10%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Class\r\n                                    <InputGroup size=\"sm\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'cls'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '15%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Subject\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'sub'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '30%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content ID\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'content_id'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '15%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Action\r\n                                    <Dropdown>\r\n                                            <Dropdown.Toggle size=\"sm\" variant=\"light\" id=\"dropdown-basic\" className=\"w-100 m-0\">\r\n                                                Sort By &nbsp;&nbsp;\r\n                                        </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('chapterName', 'false'); }}>Chapter</Button>\r\n                                                        <Button onClick={() => { orderByThis('chapterName', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('classId', 'false'); }}>Class</Button>\r\n                                                        <Button onClick={() => { orderByThis('classId', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('subjectId', 'false'); }}>Subject</Button>\r\n                                                        <Button onClick={() => { orderByThis('subjectId', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentID', 'false'); }}>contentID</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentID', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblRecords} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getRecords.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_cls tr_cls_' + item.id}>\r\n                                            <td style={{ width: '30%' }}>{item.chapterName}</td>\r\n                                            <td style={{ width: '10%' }}>{item.className}</td>\r\n                                            <td style={{ width: '15%' }}>{item.subjectName}</td>\r\n                                            <td style={{ width: '30%' }}>{item.contentID}</td>\r\n                                            <td style={{ width: '15%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"Change\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Remove\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'remove')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"col-4 pt-3\">\r\n                    <table className=\"lmt\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"y\"> Limit: </div>\r\n                                    <Select value={getSelectedLimit} className=\"x\" options={Limitoptions} onChange={handleChange_limit} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n                <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n                    <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n                </Col>\r\n                <Col className=\"col-12 pt-3\">\r\n                    <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_new')} color=\"indigo\" className=\"btnAdd\">\r\n                        <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" />&nbsp; Add New\r\n                    </MDBBtn>\r\n                    <p>\r\n                        <br />\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport './Settings.scss';\r\n\r\nexport default function RemoteAuthUrl() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [secret, setSecret] = useState('');\r\n    const [remoteUrl, setRemoteUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        GetRemoteUrl();\r\n    }, []);\r\n    const GetRemoteUrl = () => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/GetRemoteUrl`)\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                if (res.data.data) {\r\n                    const url = res.data.data[0].url || '';\r\n                    setRemoteUrl(url);\r\n                }\r\n                setIsLoading(false);\r\n            }).catch(err => {\r\n                setError('Error');\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const body = {\r\n            url: remoteUrl,\r\n            secret\r\n        };\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        setIsLoading(true);\r\n        axios.post(`${baseurl}api/mpeg/SetRemoteUrl`, body, config)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                console.log(res.data.data);\r\n                setError(res.data.data);\r\n                GetRemoteUrl();\r\n                setRemoteUrl('');\r\n                setSecret('');\r\n            }).catch(err => {\r\n                setError('Error');\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Col className=\"col-12 col-sm-12 col-md-8 col-lg-6 pt-3\">\r\n            <Card>\r\n                <Card.Header>\r\n                    Admin Domain Url\r\n                    <span className=\"loading-error\">{getError}</span>\r\n                    {\r\n                        getIsLoading ? <Loading /> : null\r\n                    }\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Form noValidate>\r\n                        <Form.Group controlId=\"Secret\">\r\n                            <Form.Label>Secret</Form.Label>\r\n                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Secret\" required\r\n                                value={secret}\r\n                                onChange={(e) => { setSecret(e.target.value); }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"Secret\">\r\n                            <Form.Label>Domain Url<span className=\"label_eg\">(e.g. http://localhost:3000)</span></Form.Label>\r\n                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Remote Url\" required\r\n                                value={remoteUrl}\r\n                                onChange={(e) => { setRemoteUrl(e.target.value); }} />\r\n                        </Form.Group>\r\n                        <MDBBtn type=\"submit\" color=\"indigo\" size=\"md\" onClick={handleSubmit}>\r\n                            <MDBIcon icon=\"save\" size=\"2x\" />\r\n                            &nbsp;&nbsp;Save Url\r\n                        </MDBBtn>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport RemoteAuthUrl from './RemoteAuthUrl';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport './Settings.scss';\r\n\r\n\r\nexport default function Settings() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [secret, setSecret] = useState('');\r\n    const [havepassword, setHavepassword] = useState(false);\r\n    const [havepasswordNotFound, setHavepasswordNotFound] = useState(true);\r\n\r\n    useEffect(() => {\r\n        SQliteHavePassword();\r\n    }, []);\r\n    const SQliteHavePassword = () => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/SQliteHavePassword`)\r\n            .then(res => {\r\n                setHavepasswordNotFound(false);\r\n                setHavepassword(res.data.data);\r\n                setIsLoading(false);\r\n                // console.log(res.data);\r\n            }).catch(err => {\r\n                setHavepasswordNotFound(true);\r\n                setError('Error load SQlite Have Password');\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSubmit = type => {\r\n        const _params = {\r\n            secret,\r\n            type\r\n        };\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/SQliteChangePassword`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                // console.log(res.data.data);\r\n                setError(res.data.data);\r\n                SQliteHavePassword();\r\n                setSecret('');\r\n            }).catch(err => {\r\n                setError('Error');\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"C_Settings\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-12 col-sm-12 col-md-8 col-lg-6 pt-3\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            DB Encryption\r\n                            {\r\n                                havepassword ?\r\n                                    <MDBIcon icon=\"unlock\" size=\"2x\" className=\"float-right\" /> :\r\n                                    havepasswordNotFound ? null : <MDBIcon icon=\"lock-open\" size=\"2x\" className=\"float-right\" />\r\n                            }\r\n\r\n                            <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate>\r\n                                <Form.Group controlId=\"Secret\">\r\n                                    <Form.Label>Secret</Form.Label>\r\n                                    <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Secret\" required\r\n                                        value={secret}\r\n                                        onChange={(e) => { setSecret(e.target.value); }} />\r\n                                </Form.Group>\r\n                                {\r\n                                    havepassword ?\r\n                                        <MDBBtn type=\"submit\" color=\"indigo\" size=\"md\" onClick={() => handleSubmit('remove')}>\r\n                                            <MDBIcon icon=\"lock-open\" size=\"2x\" />\r\n                                            &nbsp;&nbsp;Remove Password\r\n                                        </MDBBtn> :\r\n                                        <MDBBtn type=\"submit\" color=\"indigo\" size=\"md\" onClick={() => handleSubmit('add')}>\r\n                                            <MDBIcon icon=\"unlock\" size=\"2x\" />\r\n                                            &nbsp;&nbsp;Add Password\r\n                                        </MDBBtn>\r\n                                }\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <RemoteAuthUrl />\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport './Activation.scss';\r\nimport { ToastAlert } from '../../Admin/Toast/Toast';\r\nimport { Toast } from '../Toast/Toast';\r\nimport BrandAnimation from '../BrandAnimation/BrandAnimation';\r\nimport Loading from '../Loading/Loading';\r\nimport { useHistory } from 'react-router-dom';\r\nconst log = console.log;\r\n\r\nexport default function Activation() {\r\n  const { activation } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const baseurl = window.ffmpeg_baseurl;\r\n\r\n  useEffect(() => {\r\n    loadDeviceID();\r\n    GetRemoteUrl();\r\n  }, []);\r\n\r\n  //#region auth section and demo fn\r\n  const [getToken, setToken] = useState('');\r\n  const [getValidFrom, setValidFrom] = useState('');\r\n  const [getValidTo, setValidTo] = useState('');\r\n  const [getError, setError] = useState('');\r\n\r\n  const AuthGetToken = () => {\r\n    let post_url = `${baseurl}api/mpeg/AuthGetToken`;\r\n    let body = {\r\n      \"Username\": \"Samrat\",\r\n      \"Password\": \"123\"\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    axios.post(post_url, body, config).then(res => {\r\n      setError(res.data.data);\r\n      setIsLoading(false);\r\n      const { token, validFrom, validTo } = res.data;\r\n      setToken(token);\r\n      setValidFrom(Utc2Local(validFrom));\r\n      setValidTo(Utc2Local(validTo));\r\n      // console.log(token);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const AdminData = (token) => {\r\n    let post_url = `${baseurl}api/mpeg/AdminData`;\r\n    let body = {};\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    };\r\n    axios.post(post_url, body, config).then(res => {\r\n      setError(res.data.data);\r\n      setIsLoading(false);\r\n      console.log(res);\r\n    }).catch(err => {\r\n      // console.log(JSON.stringify(err));\r\n      let status = (err.response || {}).statusText || '';\r\n      console.log(status);\r\n      setIsLoading(false);\r\n    });\r\n\r\n  }\r\n  const Utc2Local = str => {\r\n    // https://momentjs.com/docs/#/parsing/string-format/\r\n    let dt = str;\r\n    if (dt) {\r\n      var x = moment.utc(dt, 'MM-DD-YYYY LTS');\r\n      dt = x.local().format('MM-DD-YYYY LTS');\r\n    }\r\n    return dt;\r\n  }\r\n  // const setActivation = () => {\r\n  //   dispatch({\r\n  //     type: 'SET_ACTIVATION',\r\n  //     payload: true\r\n  //     // payload: !activation.isActivate\r\n  //   });\r\n  // };\r\n  //#endregion\r\n\r\n  const [getIsLoading, setIsLoading] = useState(false);\r\n  const [getAppId, setAppId] = useState('');\r\n  const [getSerialKey, setSerialKey] = useState('');\r\n  const [getDeviceId, setDeviceId] = useState('');\r\n  const [getClientName, setClientName] = useState('');\r\n  const [getDesc, setDesc] = useState('');\r\n  const [remoteUrl, setRemoteUrl] = useState('');\r\n\r\n  const today = () => {\r\n    return moment().local().format('YYYY-MM-DD HH:mm:ss');\r\n  };\r\n  const loadDeviceID = () => {\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/DeviceInfo`)\r\n      .then(res => {\r\n        setDeviceId(res.data.deviceId);\r\n        setIsLoading(false);\r\n        // console.log(res.data);\r\n      }).catch(err => {\r\n        ToastAlert(\"Error load DeviceId\", 'e');\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const GetRemoteUrl = () => {\r\n    setIsLoading(true);\r\n    axios.get(`${baseurl}api/mpeg/GetRemoteUrl`)\r\n      .then(res => {\r\n        // console.log(res.data);\r\n        if (res.data.data) {\r\n          let url = res.data.data[0].url || '';\r\n          var patt = new RegExp(\"[/]$\");\r\n          var hasSlash = patt.test(url);\r\n          if (!hasSlash) {\r\n            url = `${url}/`;\r\n          }\r\n          setRemoteUrl(url);\r\n        }\r\n      }).catch(err => {\r\n      });\r\n  };\r\n  const handleSubmit = () => {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    const body = {\r\n      appId: getAppId,\r\n      serialKey: getSerialKey,\r\n      deviceId: getDeviceId,\r\n      clientName: getClientName,\r\n      description: getDesc,\r\n      activationDate: today()\r\n    };\r\n    // console.log(body);\r\n    setIsLoading(true);\r\n    axios.post(`${remoteUrl}api/mpeg/KeyActivation`, body, config).then(res => {\r\n      setIsLoading(false);\r\n      // console.log(res);\r\n      if (res.data.data) {\r\n        ToastAlert(res.data.data, 's');\r\n        KeyActivationClient(body, config);\r\n      }\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n      if (res.data.error_data)\r\n        ToastAlert(res.data.error_data, 's');\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n  const KeyActivationClient = (body, config) => {\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/KeyActivationClient`, body, config).then(res => {\r\n      setIsLoading(false);\r\n      // console.log(res);\r\n      if (res.data.data) {\r\n        setTimeout(() => {\r\n          history.push('/');\r\n        }, 2000);\r\n      }\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"C_Activation\">\r\n      <Toast />\r\n      <div style={{ position: 'relative' }}>\r\n        <BrandAnimation />\r\n      </div>\r\n      <Container fluid className=\"C_Activation\">\r\n        <Row className=\"h-100 m-0\">\r\n          <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n            <Card>\r\n              <Card.Header>\r\n                Key Activation\r\n                {\r\n                  getIsLoading ? <Loading /> : null\r\n                }\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"Device_ID\">\r\n                    <Form.Label>Device ID</Form.Label>\r\n                    <Form.Control type=\"text\" defaultValue={getDeviceId} placeholder=\"Device ID\" readOnly />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"App_ID\">\r\n                    <Form.Label>App ID</Form.Label>\r\n                    <Form.Control type=\"text\" autoComplete=\"off\" defaultValue={getAppId} onChange={(e) => setAppId(e.target.value)} placeholder=\"App ID\" />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Serial_Key\">\r\n                    <Form.Label>Serial Key</Form.Label>\r\n                    <Form.Control type=\"text\" autoComplete=\"off\" defaultValue={getSerialKey} placeholder=\"Serial Key\" onChange={(e) => setSerialKey(e.target.value)} />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Client_Name\">\r\n                    <Form.Label>Client Name</Form.Label>\r\n                    <Form.Control type=\"text\" autoComplete=\"off\" defaultValue={getClientName} placeholder=\"Client Name\" onChange={(e) => setClientName(e.target.value)} />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Client_Desc\">\r\n                    <Form.Label>Client Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} autoComplete=\"off\" defaultValue={getDesc} placeholder=\"Client Description\" onChange={(e) => setDesc(e.target.value)} />\r\n                  </Form.Group>\r\n                  <MDBBtn type=\"button\" color=\"indigo\" size=\"sm\" onClick={handleSubmit} >\r\n                    <MDBIcon icon=\"save\" />&nbsp;&nbsp;Activate\r\n                  </MDBBtn>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { ListGroup, Col, Container, Form, Row, Card, Table, Pagination, Dropdown, Modal, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport { ToastAlert } from '../../Admin/Toast/Toast';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Activation.scss';\r\n\r\nimport { DatePicker } from '@y0c/react-datepicker';\r\nimport '@y0c/react-datepicker/assets/styles/calendar.scss';\r\n\r\nconst log = console.log;\r\n\r\n//https://reactjsexample.com/tag/date/\r\n//https://reactjsexample.com/react-datepicker-rangedatepicker-timepicker-component/\r\n// https://y0c.github.io/react-datepicker/?path=/story/calendar--custom-day-class\r\n\r\n// https://edwardfhsiao.github.io/react-picky-date-time/\r\n\r\nexport default function KeyGenerator() {\r\n  const baseurl = window.ffmpeg_baseurl;\r\n  const [getIsLoading, setIsLoading] = useState(false);\r\n  const [getError, setError] = useState('');\r\n\r\n  const [getAppId, setAppId] = useState('');\r\n  const [getSerialKey, setSerialKey] = useState('');\r\n  const [getCopyKeyGen, setCopyKeyGen] = useState('');\r\n  const [disabledRegister, setDisabledRegister] = useState(false);\r\n\r\n  const [getAllKeyGens, setAllKeyGens] = useState([]);\r\n  const [getKeyGenParams, setKeyGenParams] = useState({\r\n    \"pageindex\": 0,\r\n    \"limit\": 5\r\n  });\r\n  const [getPageItems, setPageItems] = useState([]);\r\n  const Limitoptions = [\r\n    { value: '5', label: '5' },\r\n    { value: '10', label: '10' },\r\n    { value: '50', label: '50' },\r\n    { value: '100', label: '100' }\r\n  ];\r\n  const [getCardBodyShow, setCardBodyShow] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalItems, setModalItems] = useState({});\r\n\r\n  let LazyKeyupTimer = useRef(null);\r\n  let appIDInput = useRef(null);\r\n  let SKeyInput = useRef(null);\r\n  let TimeInput = useRef(null);\r\n  let ToggleTarget = useRef(null);\r\n\r\n  //#region Hooks \r\n  useEffect(() => {\r\n    loadAppID();\r\n    LoadAllKeyGens(getKeyGenParams);\r\n  }, []);\r\n\r\n  //#endregion\r\n  const loadAppID = () => {\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/LicenseGenerateKey`)\r\n      .then(res => {\r\n        setAppId(res.data.appId);\r\n        setSerialKey(res.data.serialKey);\r\n        setIsLoading(false);\r\n        setCopyKeyGen(res.data);\r\n        setDisabledRegister(false)\r\n        // console.log(res.data);\r\n      }).catch(err => {\r\n        ToastAlert(\"Error load License Generate Key\", 'e');\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const today = () => {\r\n    return moment().local().format('YYYY-MM-DD HH:mm:ss');\r\n  }\r\n  const copyKeyGen = (data) => {\r\n    // console.log(getCopyKeyGen);\r\n    var textArea = document.createElement(\"textarea\");\r\n    if (data) {\r\n      textArea.value = JSON.stringify(data);\r\n    } else {\r\n      textArea.value = JSON.stringify(getCopyKeyGen);\r\n    }\r\n    document.body.appendChild(textArea);\r\n    // textArea.focus();\r\n    textArea.select();\r\n    try {\r\n      var successful = document.execCommand('copy');\r\n      var msg = successful ? 'successful' : 'unsuccessful';\r\n      // console.log('Fallback: Copying text command was ' + msg);\r\n    } catch (err) {\r\n      // console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n    document.body.removeChild(textArea);\r\n    ToastAlert('Copied', 's');\r\n\r\n  }\r\n  const handleSubmit = () => {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    const body = { LicenceAppId: getAppId, LicenceKey: getSerialKey, creationDate: today() };\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/AddLicenseKeyGen`, body, config).then(res => {\r\n      // console.log(res);\r\n      if (res.data.data)\r\n        ToastAlert(res.data.data, 's');\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n      setIsLoading(false);\r\n      setDisabledRegister(true);\r\n      LoadAllKeyGens(getKeyGenParams);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const RemoveKeyGen = (_appid) => {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    const body = { LicenceAppId: _appid };\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/RemoveLicenseKeyGen`, body, config).then(res => {\r\n      // console.log(res);\r\n      if (res.data.data)\r\n        ToastAlert(res.data.data, 's');\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n      setIsLoading(false);\r\n      LoadAllKeyGens(getKeyGenParams);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const LoadAllKeyGens = (_params) => {\r\n    setIsLoading(true);\r\n    axios.get(`${baseurl}api/mpeg/getLicenseKeyGens`, {\r\n      params: _params\r\n    }).then(res => {\r\n      setAllKeyGens(res.data.data);\r\n      let { pageindex, totalPage } = res.data;\r\n      let PageItems = [];\r\n      for (let p = 0; p < totalPage; p++) {\r\n        PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>{p + 1}</Pagination.Item>);\r\n      }\r\n      setPageItems(PageItems);\r\n      setIsLoading(false);\r\n      // setError('');\r\n      // console.log(res.data);\r\n    }).catch(err => {\r\n      setIsLoading(false);\r\n      setError('Error loading Content');\r\n    });\r\n  }\r\n  const LazyKeyup = (_callback) => {\r\n    clearTimeout(LazyKeyupTimer.current);\r\n    LazyKeyupTimer.current = setTimeout(() => {\r\n      _callback();\r\n      // _callback.call(this, _args);\r\n    }, 1000);\r\n  };\r\n  const searchByAppID = _appID => {\r\n    SKeyInput.current.value = '';\r\n    TimeInput.current.value = '';\r\n    LazyKeyup(() => {\r\n      setKeyGenParams(prevData => {\r\n        let data = { ...prevData, \"appId\": _appID, \"pageindex\": 0 };\r\n        delete data[\"serialKey\"];\r\n        delete data[\"creationDate\"];\r\n        LoadAllKeyGens(data);\r\n        return data;\r\n      });\r\n    });\r\n  };\r\n  const searchBySKey = _SKey => {\r\n    appIDInput.current.value = '';\r\n    TimeInput.current.value = '';\r\n    console.log(0);\r\n    LazyKeyup(() => {\r\n      setKeyGenParams(prevData => {\r\n        let data = { ...prevData, \"serialKey\": _SKey, \"pageindex\": 0 };\r\n        delete data[\"appId\"];\r\n        delete data[\"creationDate\"];\r\n        LoadAllKeyGens(data);\r\n        return data;\r\n      });\r\n    });\r\n  };\r\n  const searchByTimestamp = _timestamp => {\r\n    // log(TimeInput.current);\r\n    // if(TimeInput.current) {\r\n    //   let children = TimeInput.current.querySelectorAll('input');\r\n    //   log(children);\r\n    // }\r\n\r\n    let creationDate = undefined;\r\n    if (_timestamp) {\r\n      let { $d } = _timestamp;\r\n      creationDate = moment($d).format('YYYY-MM-DD');\r\n      // console.log('searchByTimestamp', _timestamp, $d);\r\n    }\r\n\r\n    appIDInput.current.value = '';\r\n    SKeyInput.current.value = '';\r\n    LazyKeyup(() => {\r\n      setKeyGenParams(prevData => {\r\n        let data = { ...prevData, creationDate, \"pageindex\": 0 };\r\n        delete data[\"appId\"];\r\n        delete data[\"serialKey\"];\r\n        LoadAllKeyGens(data);\r\n        return data;\r\n      });\r\n    });\r\n  };\r\n  const pageChange = p_index => {\r\n    setKeyGenParams(prevData => {\r\n      let data = { ...prevData, \"pageindex\": p_index };\r\n      LoadAllKeyGens(data);\r\n      return data;\r\n    });\r\n  };\r\n  const toggleCardBody = () => {\r\n    setCardBodyShow(prev => {\r\n      let elm = ToggleTarget.current;\r\n      if (!elm) return;\r\n      let h = elm.offsetHeight;\r\n      if (prev) {\r\n        elm.classList.add('minimize-zone-active')\r\n        setTimeout(() => {\r\n          elm.style.marginTop = `-${h}px`;\r\n        }, 100);\r\n      } else {\r\n        elm.style.marginTop = `0px`;\r\n        setTimeout(() => {\r\n          elm.classList.remove('minimize-zone-active')\r\n        }, 300);\r\n      }\r\n      return !prev;\r\n    });\r\n  }\r\n  const Action_Click = (_item, e) => {\r\n    const { appId, serialKey } = _item;\r\n    if ('copy_key' === e) {\r\n      copyKeyGen({ appId, serialKey });\r\n    } else if ('delete_key' === e) {\r\n      if (confirm('are you sure to delete appId')) {\r\n        RemoveKeyGen(appId);\r\n      }\r\n    }\r\n    else if ('client_info' === e) {\r\n      setModalItems(_item);\r\n      setShowModal(true)\r\n    }\r\n  };\r\n  const handleCloseModal = () => setShowModal(false);\r\n\r\n  return (\r\n    <Container fluid className=\"C_KeyGenerator\">\r\n      <Row className=\"h-100 m-0\">\r\n        <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n          <Card>\r\n            <Card.Header>\r\n              {disabledRegister ? \"Reload New KeyGen\" : \"Key Generator\"}\r\n              <span className=\"loading-error\">{getError}</span>\r\n              {\r\n                getIsLoading ? <Loading /> : null\r\n              }\r\n              <span className=\"minimize-card\" onClick={toggleCardBody}>\r\n                <MDBIcon icon={getCardBodyShow ? 'minus' : 'plus'} />\r\n              </span>\r\n            </Card.Header>\r\n            {\r\n              <Card.Body ref={ToggleTarget} className=\"minimize-zone\">\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"App_ID\">\r\n                    <Form.Label>App ID</Form.Label>\r\n                    <MDBIcon icon=\"redo-alt\" className=\"indigo-text refresh-btn\" size=\"lg\" title=\"Refresh KeyGen\" onClick={loadAppID} />\r\n                    <MDBIcon icon=\"copy\" className=\"green-text refresh-btn\" size=\"lg\" title=\"Copy KeyGen\" onClick={() => copyKeyGen(null)} />\r\n                    <Form.Control type=\"text\" defaultValue={getAppId} placeholder=\"App ID\" readOnly />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Serial_Key\">\r\n                    <Form.Label>Serial Key</Form.Label>\r\n                    <Form.Control type=\"text\" defaultValue={getSerialKey} placeholder=\"Serial Key\" readOnly />\r\n                  </Form.Group>\r\n                  <MDBBtn type=\"button\" color=\"indigo\" size=\"sm\" onClick={handleSubmit} disabled={disabledRegister}>\r\n                    <MDBIcon icon=\"save\" />&nbsp;&nbsp;Register\r\n                  </MDBBtn>\r\n                </Form>\r\n              </Card.Body>\r\n            }\r\n          </Card>\r\n        </Col>\r\n        <Col className=\"col-12 pt-3\">\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <div className=\"td-filter-box\">\r\n                    App ID\r\n                    <InputGroup size=\"sm\" className=\"\">\r\n                      <FormControl\r\n                        placeholder=\"Search by App ID\"\r\n                        aria-label=\"\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        onKeyUp={(e) => { searchByAppID(e.target.value); }}\r\n                        ref={appIDInput}\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  <div className=\"td-filter-box\">\r\n                    Serial Key\r\n                    <InputGroup size=\"sm\" className=\"\">\r\n                      <FormControl\r\n                        placeholder=\"Search by serial Key\"\r\n                        aria-label=\"\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        onKeyUp={(e) => { searchBySKey(e.target.value); }}\r\n                        ref={SKeyInput}\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  <div className=\"td-filter-box dt-range\">\r\n                    Timestamp\r\n                    <InputGroup size=\"sm\" className=\"\" ref={TimeInput}>\r\n                      <DatePicker\r\n                        onChange={searchByTimestamp}\r\n                        placeholder=\"Search by Timestamp\"\r\n                        showDefaultIcon clear\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  Action\r\n                  <MDBIcon icon=\"redo-alt\" className=\"indigo-text refresh-btn\" size=\"lg\" title=\"Refresh All KeyGens\" onClick={() => { LoadAllKeyGens(getKeyGenParams) }} />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                getAllKeyGens.map((item, index) => {\r\n                  return <tr key={index}>\r\n                    <td>{item.appId}</td>\r\n                    <td>{item.serialKey}</td>\r\n                    <td>\r\n                      {item.creationDate}\r\n                      {item.deviceId ? <MDBIcon icon=\"check\" className=\"green-text activated\" title=\"Activated\"/> : null}\r\n                    </td>\r\n                    <td className=\"actions\">\r\n                      <div>\r\n                        <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'copy_key')}>\r\n                          <MDBIcon size=\"lg\" icon=\"copy\" className=\"green-text\" title=\"Copy KeyGen\" />\r\n                        </button>\r\n                        <button title=\"Client Info\" className=\"\" type=\"button\" onClick={() => Action_Click(item, 'client_info')}>\r\n                          <MDBIcon size=\"lg\" icon=\"sticky-note indigo-text\" />\r\n                        </button>\r\n                        <button title=\"Delete Key\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_key')}>\r\n                          <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>;\r\n                })\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n          <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n        </Col>\r\n      </Row>\r\n      <Modal show={showModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Client Information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-0 client-info\">\r\n          <ListGroup>\r\n            <ListGroup.Item><span className=\"lbl\">App Id:</span> {modalItems.appId}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Serial Key:</span> {modalItems.serialKey}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Creation Date:</span> {modalItems.creationDate}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Device Id:</span> {modalItems.deviceId}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Client Name:</span> {modalItems.clientName}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Description:</span> {modalItems.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Activation.scss';\r\n\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nfunction Login(props) {\r\n    const { activation } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const setAuth = () => {\r\n        dispatch({\r\n            type: 'SET_AUTH',\r\n            payload: !activation.isAuth\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className=\"C_Login\">\r\n            <Row className=\"h-100\">\r\n                <Col className=\"col-9 mt-3\" style={{ border: '1px dashed red' }}>\r\n                    <h2> login form</h2>\r\n                    <input type=\"button\" value=\"getDB\" hidden />\r\n                    <p>{activation.isAuth ? 'Authenticated' : 'Please login'}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Entry from \"./Entry/Entry\";\r\nimport Home from \"./Home/Home\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport Upload from \"./Admin/Upload/Upload\";\r\nimport Conversion from \"./Admin/Conversion/Conversion\";\r\nimport AddCsub from \"./Admin/AddCsub/AddCsub\";\r\nimport AddChap from \"./Admin/AddChap/AddChap\";\r\nimport Settings from \"./Admin/Settings/Settings\";\r\nimport Activation from \"./Admin/Activation/Activation\";\r\nimport KeyGenerator from './Admin/Activation/KeyGenerator';\r\nimport Login from \"./Admin/Activation/Login\";\r\nimport './ffmpeg.scss';\r\n\r\nexport function Routes() {\r\n    return (\r\n        <Fragment>\r\n            <Route path=\"/\" exact>\r\n                {\r\n                    <Entry />\r\n                    // <Admin />\r\n                }\r\n            </Route>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            <Switch>\r\n                <Route path=\"/home\" exact component={Home} />\r\n                <Route path=\"/login\" exact component={Login} />\r\n                <Route path=\"/activation\" exact component={Activation} />\r\n                <Route path=\"/admin/upload\" exact component={Upload} />\r\n                <Route path=\"/admin/conversion\" exact component={Conversion} />\r\n                <Route path=\"/admin/addclsnsub\" exact component={AddCsub} />\r\n                <Route path=\"/admin/addchap\" exact component={AddChap} />\r\n                <Route path=\"/admin/settings\" exact component={Settings} />\r\n                <Route path=\"/admin/keygen\" exact component={KeyGenerator} />\r\n                <Route path=\"/test\" exact render={() => { return <h3>Test</h3> }} />\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function RoutesUser() {\r\n    return (\r\n        <Fragment>\r\n            <Route path=\"/\" exact>\r\n                {\r\n                    <Entry />\r\n                }\r\n            </Route>\r\n            <Route path=\"/home\" exact component={Home} />\r\n            <Route path=\"/admin\" exact render={() => { return <h3>This is an user app</h3> }} />\r\n        </Fragment>\r\n    )\r\n}\r\n","const initialState = {\r\n    isActivate: false,\r\n    isAuth: true,\r\n    loggedInUser: null,\r\n    loading_CheckActivation: false\r\n};\r\nexport function ActivationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case 'SET_ACTIVATION':\r\n            return {\r\n                ...state,\r\n                isActivate: action.payload\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.payload\r\n            }\r\n        case 'SET_LOADING_CheckActivation':\r\n            return {\r\n                ...state,\r\n                loading_CheckActivation: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { ActivationReducer } from \"./ActivationReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    activation: ActivationReducer\r\n});\r\n\r\nexport default rootReducer;","import React, { Component } from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom'; // BrowserRouter  HashRouter\r\nimport { Routes, RoutesUser } from './ffmpeg/Routes';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './ffmpeg/reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            {\r\n              <Routes />\r\n              // <RoutesUser />\r\n            }\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport axios from 'axios';\r\n\r\n//#region Demo\r\n// axios.defaults.baseURL = \"https://jsonplaceholder.typicode.com\";\r\n// axios.defaults.headers.common['Auth'] = 'AUTH 56';\r\n// axios.defaults.headers.post['content'] = 'CONTENT XX'\r\n\r\n// axios.interceptors.request.use(req => {\r\n//     // console.log({req});\r\n//     return req;\r\n// }, error => {\r\n//     console.log(error);\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n// axios.interceptors.response.use(res => {\r\n//     // console.log({res});\r\n//     return res;\r\n// });\r\n//#endregion\r\nconsole.clear();\r\nlet publish = window.publish || false;\r\nif(publish == true){\r\n    window.ffmpeg_baseurl = window.location.origin + \"/\";\r\n} else {\r\n    window.ffmpeg_baseurl = \"http://localhost:50017/\";\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}