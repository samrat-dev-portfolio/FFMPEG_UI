{"version":3,"sources":["ffmpeg/Admin/Toast/Toast.js","ffmpeg/Admin/Activation/LocalStorage.js","ffmpeg/Admin/Activation/CommonMethods.js","ffmpeg/Admin/Activation/CheckIsActivated.js","ffmpeg/Home/ProgressAlert/ProgressAlert.js","ffmpeg/Entry/Entry.js","ffmpeg/Home/Header/Header.js","ffmpeg/Home/Content/Content.js","ffmpeg/Admin/Player/Player.js","ffmpeg/Home/Home.js","ffmpeg/Admin/Activation/Activation.js","ffmpeg/Admin/Activation/KeyGenerator.js","ffmpeg/Routes.js","ffmpeg/reducers/ActivationReducer.js","ffmpeg/reducers/index.js","App.js","index.js"],"names":["Toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ToastAlert","_alert","type","toastRef","toast","info","success","warn","error","progress","undefined","ffmpegLocalStorageDb","Dexie","version","stores","ffmpegLocalStorage","open","catch","err","console","log","GetFFMPEGLocalDataByKey","key","a","where","equals","first","data","value","PutFFMPEGLocalData","val","modify","add","ffmpeg_key","IsActivated","baseurl","axios","post","res","LocalStorage_IsActivated","LocalStorage_ActivationExpired","WillActivationExpired","ActivationExpiredDayStr","_from","moment","_today","local","format","diff","CheckIsActivated","window","ffmpeg_baseurl","dispatch","useDispatch","history","useHistory","useSelector","state","activation","useEffect","_checkIsActivated","payload","_IsActivated","_ActivationExpired","activated","activated_alert","location","pathname","push","ProgressAlert","props","className","alert","Entry","Container","fluid","loading_CheckActivation","Row","Col","isActivate","isAuth","to","color","size","icon","Header","style","flexDirection","selected_class","selected_subject","selected_chapter","Content","loading_class","enabled","my_class","loading_subject","my_subject","loading_chapter","my_chapter","Button","variant","onClick","Player","show","onhide","contentID","chapter","playerRef","React","useRef","playerWrapperRef","useState","getM3u8Url","setM3u8Url","Resize","actualWidth","innerWidth","document","documentElement","clientWidth","body","offsetWidth","innerHeight","clientHeight","offsetHeight","current","width","w","onresize","onblur","reload","_params","params","ref","length","srcoff","xsrc","src","autoPlay","controls","height","onEnded","classList","setTimeout","Home","getLoading_class","setLoading_class","getClasses","setClasses","getSelectedClass","setSelectedClass","getSelectedClassName","setSelectedClassName","getSelectedChapterName","setSelectedChapterName","getLoading_subject","setLoading_subject","getSubjects","setSubjects","getSelectedSubject","setSelectedSubject","getSelectedSubjectName","setSelectedSubjectName","getLoading_chapter","setLoading_chapter","getChapters","setChapters","body_blue","loadClasses","loadSubject","query","URLSearchParams","search","cls","get","sub","cls_name","chap_name","body_blue_reset","urlParamCreation","loadChapter","then","click_classItem","_item","id","click_subjectItem","_id","find","item","index","subjectName","mapSelectedSubjectsName","click_chapterItem","_e","chapterName","highlight","setPlayerContentID","setPlayerTitle","setLoadPlayer","_className","_target","target","querySelectorAll","forEach","i","remove","_search","replace","getLoadPlayer","getPlayerContentID","getPlayerTitle","map","e","RoutesUser","path","exact","component","render","initialState","loggedInUser","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","App","Component","clear","publish","origin","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c88c91ec.chunk.js","sourcesContent":["import React from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Toast.scss';\r\n\r\nexport function Toast() {\r\n    return (\r\n        <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n        />\r\n    )\r\n}\r\n\r\nexport function ToastAlert(_alert, type = '') {\r\n    let toastRef = toast;\r\n    if (type == 'info' || type == 'i') {\r\n        toastRef = toast.info;\r\n    }\r\n    else if (type == 'success' || type == 's') {\r\n        toastRef = toast.success;\r\n    }\r\n    else if (type == 'warn' || type == 'w') {\r\n        toastRef = toast.warn;\r\n    }\r\n    else if (type == 'error' || type == 'e') {\r\n        toastRef = toast.error;\r\n    }\r\n    toastRef(_alert, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}","import Dexie from 'dexie';\r\n\r\nconst ffmpegLocalStorageDb = () => {\r\n    const ffmpegLocalStorageDb = new Dexie('ffmpegLocalStorageDb');\r\n    ffmpegLocalStorageDb.version(2).stores({ ffmpegLocalStorage: \"ffmpeg_key, value\" });\r\n    ffmpegLocalStorageDb.open().catch(err => {\r\n        console.log(err);\r\n    });\r\n    return ffmpegLocalStorageDb;\r\n};\r\nexport const GetFFMPEGLocalData = async () => {\r\n    return await ffmpegLocalStorageDb().ffmpegLocalStorage.toArray();\r\n};\r\nexport const GetFFMPEGLocalDataByKey = async (key) => {\r\n    const data = await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).first();\r\n    const value = (data || {}).value || null;\r\n    return value;\r\n    // https://dexie.org/docs/Collection/Collection.first()\r\n};\r\n\r\nexport const SetFFMPEGLocalData = async (key, value) => {\r\n    let data = {\r\n        ffmpeg_key: key,\r\n        value\r\n    };\r\n    return await ffmpegLocalStorageDb().ffmpegLocalStorage.add(data);\r\n};\r\nexport const PutFFMPEGLocalData = async (key, val) => {\r\n    const data = await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).first();\r\n    const _value = (data || {}).value || null;\r\n    if (_value) {\r\n        return await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).modify({ value: val });\r\n    }\r\n    else {\r\n        return await ffmpegLocalStorageDb().ffmpegLocalStorage.add({\r\n            ffmpeg_key: key,\r\n            value: val\r\n        });\r\n    }\r\n};\r\nexport const DeleteFFMPEGLocalData = async (key) => {\r\n    return await ffmpegLocalStorageDb().ffmpegLocalStorage.where('ffmpeg_key').equals(key).delete();\r\n};\r\n\r\nexport default ffmpegLocalStorageDb;","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport { PutFFMPEGLocalData, GetFFMPEGLocalDataByKey } from './LocalStorage';\r\n\r\nexport const IsActivated = async (baseurl) => {\r\n    try {\r\n        const res = await axios.post(`${baseurl}api/mpeg/IsActivated`);\r\n        return res;\r\n        // console.log(res.data);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\nexport const LocalStorage_IsActivated = async (val) => {\r\n    if (val) {\r\n        await PutFFMPEGLocalData('IsActivate', val);\r\n    } else {\r\n        let data = await GetFFMPEGLocalDataByKey('IsActivate');\r\n        // console.log('IsActivate', data);\r\n        return data;\r\n    }\r\n};\r\nexport const LocalStorage_ActivationExpired = async (val) => {\r\n    if (val) {\r\n        await PutFFMPEGLocalData('ActivationExp', val);\r\n    } else {\r\n        let data = await GetFFMPEGLocalDataByKey('ActivationExp');\r\n        // console.log('ActivationExp', data);\r\n        return data;\r\n    }\r\n};\r\nexport const Today = () => {\r\n    return moment().local().format('YYYY-MM-DD HH:mm:ss');\r\n};\r\nexport const ActivationExpiredDay = () => {\r\n    return moment().local().add(12, 'hours').format('YYYY-MM-DD HH:mm:ss'); // days hours minutes\r\n};\r\nexport const WillActivationExpired = (ActivationExpiredDayStr) => {\r\n    if (ActivationExpiredDayStr === null) return true;\r\n    const _from = moment(ActivationExpiredDayStr, 'YYYY-MM-DD HH:mm:ss');\r\n    const _today = moment(Today(), 'YYYY-MM-DD HH:mm:ss');\r\n    let diff = _from.diff(_today, 'hours'); // _nextday > _today = +ve\r\n    // console.log(_from, _today, diff)\r\n    return diff <= 0;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ToastAlert, Toast } from '../Toast/Toast';\r\nimport {\r\n    IsActivated,\r\n    LocalStorage_ActivationExpired,\r\n    LocalStorage_IsActivated,\r\n    ActivationExpiredDay,\r\n    WillActivationExpired\r\n} from './CommonMethods';\r\n\r\nexport default function CheckIsActivated() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { activation } = useSelector(state => state);\r\n\r\n    useEffect(() => {\r\n        _checkIsActivated();       \r\n    }, []);\r\n\r\n    const _checkIsActivated = async () => {\r\n        dispatch({\r\n            type: 'SET_LOADING_CheckActivation',\r\n            payload: true\r\n        });\r\n        const _IsActivated = await LocalStorage_IsActivated();\r\n        let _ActivationExpired = await LocalStorage_ActivationExpired();\r\n        _ActivationExpired = WillActivationExpired(_ActivationExpired);\r\n        // console.log({ _ActivationExpired, _IsActivated });\r\n        if (_IsActivated === true && _ActivationExpired === false) {\r\n            // console.log('IsActivate fill');\r\n            dispatch({\r\n                type: 'SET_ACTIVATION',\r\n                payload: _IsActivated\r\n            });\r\n        }\r\n        else {\r\n            // console.log('IsActivate empty');\r\n            const res = await IsActivated(baseurl);\r\n            // console.log(res.data);\r\n            const activated = res.data.activated || false;\r\n            const activated_alert = res.data.data || \"\";\r\n            dispatch({\r\n                type: 'SET_ACTIVATION',\r\n                payload: activated\r\n            });\r\n            if (!activated) {\r\n                ToastAlert(activated_alert, 'w');\r\n                const { location: { pathname } } = history;\r\n                if (pathname !== \"/\") {\r\n                    history.push('/');\r\n                }\r\n            } else {\r\n                await LocalStorage_IsActivated(activated);\r\n                await LocalStorage_ActivationExpired(ActivationExpiredDay());\r\n            }\r\n        }\r\n        dispatch({\r\n            type: 'SET_LOADING_CheckActivation',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Toast />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './ProgressAlert.scss';\r\n\r\nexport default function ProgressAlert(props) {\r\n    return (\r\n        <span className=\"C_ProgressAlert progress-1\" >\r\n            {props.alert}\r\n        </span>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\n// import axios from 'axios';\r\n// import moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Entry.scss';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { ToastAlert, Toast } from '../Admin/Toast/Toast';\r\nimport CheckIsActivated from './../Admin/Activation/CheckIsActivated';\r\nimport ProgressAlert from '../Home/ProgressAlert/ProgressAlert';\r\n\r\nexport default function Entry(props) {\r\n    const { activation } = useSelector(state => state);\r\n    // const baseurl = window.ffmpeg_baseurl;\r\n    // const dispatch = useDispatch();\r\n    // const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Container fluid className=\"C_Entry bimg-page-1\">\r\n            {activation.loading_CheckActivation ? <ProgressAlert alert=\"Loading...\" /> : null}\r\n            <CheckIsActivated />\r\n            <Row className=\"h-100\">\r\n                <Col className=\"col-9\">\r\n                </Col>\r\n                <Col className=\"col-3 p-0\">\r\n                    <div className=\"home_btn_row\">\r\n                        {\r\n                            !activation.isActivate ?\r\n                                !activation.loading_CheckActivation && <Link className=\"home_btn\" to=\"/activation\">\r\n                                    <MDBBtn color=\"success\" className=\"\">\r\n                                        Activate\r\n                                        <MDBIcon size=\"lg\" icon=\"shield-alt\" className=\"ml-2\" />\r\n                                    </MDBBtn>\r\n                                </Link> :\r\n                                !activation.isAuth ?\r\n                                    <Link className=\"home_btn\" to=\"/login\">\r\n                                        <MDBBtn color=\"dark\">\r\n                                            Login\r\n                                            <MDBIcon size=\"lg\" icon=\"sign-in-alt\" className=\"ml-2\" />\r\n                                        </MDBBtn>\r\n                                    </Link> :\r\n                                    <Link className=\"home_btn\" to=\"/home\">\r\n                                        <MDBBtn color=\"amber\" className=\"indigo-text\">\r\n                                            Enter\r\n                                            <MDBIcon size=\"lg\" icon=\"caret-right\" className=\"ml-2\" />\r\n                                        </MDBBtn>\r\n                                    </Link>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Header.scss';\r\n// import styled from 'styled-components';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <Container fluid className=\"C_Header bimg-page-2 p-0\">\r\n            <Row className=\"gutter m-0\">\r\n                <Col className=\"col-4 logo-1\"></Col>\r\n                <Col className=\"col-8 head-details\">\r\n                    <div className=\"b-orange\">\r\n                        <Col className=\"col-4 b-red c-white center-xy d-flex\" style={{ flexDirection: 'column' }}>\r\n                            <div>\r\n                                {props.selected_class}\r\n                            </div>\r\n                            <span className=\"subject-details\">\r\n                                {\r\n                                    props.selected_subject ? props.selected_subject : ''\r\n                                }\r\n                            </span>\r\n                        </Col>\r\n                        <Col className=\"col-8 b-green c-white center-xy d-flex\">\r\n                            <span className=\"chaptert-details\">\r\n\r\n                                {props.selected_chapter}\r\n                            </span>\r\n                        </Col>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Content.scss';\r\nimport ProgressAlert from '../ProgressAlert/ProgressAlert';\r\n\r\nexport default function Content(props) {\r\n    const history = useHistory();\r\n\r\n    const Leave = () => {\r\n        // console.log(history);\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Content bimg-page-2 p-0\">\r\n            <Row className=\"h-100 gutter m-0\">\r\n                <Col className=\"col-12 b-orange py-1 b-radius-1 shadow-1\">\r\n                    <Row>\r\n                        <Col className=\"col-2 pl-4\">\r\n                            Shreni\r\n                        </Col>\r\n                        <Col className=\"col-3 pl-4\">\r\n                            Bishoy\r\n                        </Col>\r\n                        <Col className=\"col-7 pl-4\">\r\n                            Adhay Suchi\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col className=\"col-12 b-red b-radius-2 space-3\">\r\n                    <Row className=\"h-100 m-0\">\r\n                        <Col className=\"col-2 pr-0 content-box\">\r\n                            {\r\n                                props.loading_class.enabled ?\r\n                                    <ProgressAlert alert={props.loading_class.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-1\">\r\n                                    {props.my_class}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-3 pr-0 content-box\">\r\n                            {\r\n                                props.loading_subject.enabled ?\r\n                                    <ProgressAlert alert={props.loading_subject.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-2\">\r\n                                    {props.my_subject}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-7 pr-0 content-box\">\r\n                            {\r\n                                props.loading_chapter.enabled ?\r\n                                    <ProgressAlert alert={props.loading_chapter.alert} /> : null\r\n                            }\r\n                            <ul className=\"list-group grp-3\">\r\n                                {props.my_chapter}\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Button variant=\"dark\" size=\"sm\" onClick={Leave}>\r\n                    <MDBIcon icon=\"angle-double-left\" className=\"sign-in mr-1\" size=\"lg\" />\r\n                    Leave\r\n                </Button>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Col, Row, Table, Button, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactHlsPlayer from 'react-hls-player';\r\nimport './Player.scss';\r\n// import cross from '../../img/9.png';\r\nimport { MDBIcon, MDBBtn, MDBContainer, MDBNavbarNav, MDBNavbar } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nexport default function Player({ show, onhide, contentID, chapter }) {\r\n    // https://www.npmjs.com/package/react-hls-player\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const playerRef = React.useRef();\r\n    const playerWrapperRef = React.useRef();\r\n    const [getM3u8Url, setM3u8Url] = useState('');\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n    const playVideo = () => {\r\n        playerRef.current.play();\r\n    };\r\n    const pauseVideo = () => {\r\n        playerRef.current.pause();\r\n    };\r\n    const toggleControls = () => {\r\n        playerRef.current.controls = !playerRef.current.controls;\r\n    };\r\n    const endedVideo = () => {\r\n        playerRef.current.classList.add('fadex');\r\n        setTimeout(() => {\r\n            onhide();\r\n        }, 3100);\r\n    };\r\n    const Resize = () => {\r\n        var actualWidth = window.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth ||\r\n            document.body.offsetWidth;\r\n\r\n        var actualHeight = window.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight ||\r\n            document.body.offsetHeight;\r\n        if (actualWidth < actualHeight) {\r\n            // console.log('w small');\r\n            if (typeof playerWrapperRef.current === 'undefined' || playerWrapperRef.current === null) return;\r\n            playerWrapperRef.current.style.width = '90%';\r\n        } else {\r\n            // console.log('h small');\r\n            if (typeof playerWrapperRef.current === 'undefined' || playerWrapperRef.current === null) return;\r\n            let w = ((3 / 4) * actualWidth) - 50;\r\n            playerWrapperRef.current.style.width = w + 'px';\r\n        }\r\n        // console.log(actualWidth, actualHeight);\r\n    };\r\n\r\n    //#region Hooks\r\n    useEffect(() => {\r\n        document.body.onresize = () => {\r\n            Resize();\r\n        };\r\n        document.body.onblur = function () {\r\n            // console.log('body blur');\r\n            // onhide();\r\n           window.location.reload();\r\n        };\r\n    }, []);\r\n    useEffect(() => {\r\n        if (contentID === null) return;\r\n        const _params = {\r\n            baseurl\r\n        }\r\n        setM3u8Url(`${baseurl}api/mpeg/M3u8info/${contentID}`,{\r\n            params: _params\r\n        });\r\n        Resize();\r\n    }, [show]);\r\n    useEffect(() => {\r\n        // const fireOnVideoStart = () => {\r\n        //     // Do some stuff when the video starts/resumes playing\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('play', fireOnVideoStart);\r\n        // return playerRef.current.removeEventListener('play', fireOnVideoStart);\r\n    }, []);\r\n    useEffect(() => {\r\n        // const fireOnVideoEnd = () => {\r\n        //     // Do some stuff when the video ends\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('ended', fireOnVideoEnd);\r\n        // return playerRef.current.removeEventListener('ended', fireOnVideoEnd);\r\n    }, []);\r\n    //#endregion\r\n\r\n    return (show && <Container fluid className=\"C_Player\">\r\n        <Col className=\"text-center py-3\">\r\n            <div className=\"player-wrapper\" ref={playerWrapperRef}>\r\n                <MDBContainer className=\"text-center\">\r\n                    <Row className=\"header\">\r\n                        <Col className=\"col-12 p-0\">\r\n                            <p className=\"m-0 h-100\">&nbsp;{chapter}</p>\r\n                            <MDBBtn className=\"exit\" color=\"mdb-color\" size=\"sm\" onClick={onhide}>\r\n                                <MDBIcon icon=\"times-circle\" />&nbsp;&nbsp;Close\r\n                            </MDBBtn>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"player-body\">\r\n                        {getM3u8Url.length > 0 ?\r\n                            <ReactHlsPlayer\r\n                                playerRef={playerRef}\r\n                                srcoff=\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"\r\n                                xsrc=\"http://localhost:50017/api/mpeg/M3u8info/20210417-020532-d829654b-bdaf-4c0c-bad6-dd7ce8326e31\"\r\n                                src={getM3u8Url}\r\n                                autoPlay={false}\r\n                                controls={true}\r\n                                width=\"100%\"\r\n                                height=\"auto\"\r\n                                onEnded={endedVideo}\r\n                            /> : null\r\n                        }\r\n                    </Row>\r\n                </MDBContainer>\r\n            </div>\r\n        </Col>\r\n    </Container>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link, Redirect } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './Header/Header';\r\nimport './Home.scss';\r\nimport Content from './Content/Content';\r\nimport axios from 'axios';\r\nimport Player from '../Admin/Player/Player';\r\nimport CheckIsActivated from '../Admin/Activation/CheckIsActivated';\r\nimport { Toast } from '../Admin/Toast/Toast';\r\n\r\nexport default function Home(props) {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n\r\n    const [getLoading_class, setLoading_class] = useState({ enabled: false, alert: '' });\r\n    const [getClasses, setClasses] = useState([]);\r\n    const [getSelectedClass, setSelectedClass] = useState('');\r\n    const [getSelectedClassName, setSelectedClassName] = useState('');\r\n    const [getSelectedChapterName, setSelectedChapterName] = useState('');\r\n\r\n    const [getLoading_subject, setLoading_subject] = useState({ enabled: false, alert: '' });\r\n    const [getSubjects, setSubjects] = useState([]);\r\n    const [getSelectedSubject, setSelectedSubject] = useState('');\r\n    const [getSelectedSubjectName, setSelectedSubjectName] = useState('');\r\n\r\n    const [getLoading_chapter, setLoading_chapter] = useState({ enabled: false, alert: '' });\r\n    const [getChapters, setChapters] = useState([]);\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    // https://www.digitalocean.com/community/tutorials/react-axios-react\r\n\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        body_blue();\r\n        loadClasses();\r\n        loadSubject();\r\n        const query = new URLSearchParams(props.location.search);\r\n        const cls = query.get('cls');\r\n        if (cls)\r\n            setSelectedClass(cls);\r\n\r\n        const sub = query.get('sub');\r\n        if (sub) {\r\n            setSelectedSubject(sub);\r\n        }\r\n\r\n        const cls_name = query.get('cls_name');\r\n        if (cls_name)\r\n            setSelectedClassName(cls_name);\r\n        const chap_name = query.get('chap_name');\r\n        if (chap_name) {\r\n            setSelectedChapterName(chap_name);\r\n        }\r\n\r\n        return body_blue_reset;\r\n    }, []);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n        if (getSelectedClass && getSelectedSubject) {\r\n            // console.log('change class, sub, load chapter');\r\n            loadChapter();\r\n        } else {\r\n            setLoading_chapter({ enabled: true, alert: 'Please Provide Class and subject' });\r\n        }\r\n    }, [getSelectedClass, getSelectedSubject]);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n    }, [getSelectedChapterName]);\r\n    //#endregion\r\n\r\n    //#region Load API\r\n    const loadClasses = () => {\r\n        setLoading_class({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setClasses(res.data.data);\r\n                setLoading_class({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);  \r\n            }).catch(err => {\r\n                setLoading_class({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadSubject = () => {\r\n        setLoading_subject({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setSubjects(res.data.data);\r\n                setLoading_subject({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setLoading_subject({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadChapter = () => {\r\n        setLoading_chapter({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getChapter`, {\r\n            params: {\r\n                cls: getSelectedClass,\r\n                sub: getSelectedSubject\r\n            }\r\n        })\r\n            .then(res => {\r\n                setChapters(res.data.data);\r\n                if (!res.data.data.length) {\r\n                    setLoading_chapter({ enabled: true, alert: 'No data Available' });\r\n                } else {\r\n                    setLoading_chapter({ enabled: false, alert: '' });\r\n                }\r\n                // console.log(res.data);\r\n            }).catch(err => {\r\n                setLoading_chapter({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const mapSelectedSubjectsName = _id => {\r\n        let data = getSubjects.find((item, index) => item.id == _id) || {};\r\n        data = data.subjectName || '';\r\n        setSelectedSubjectName(data);\r\n    };\r\n    //#endregion\r\n\r\n    //#region Create List View\r\n    const getClasses_view = () => {\r\n        let data = [];\r\n        data = getClasses.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_classItem(item) }}>Class {item.className}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getSubjects_view = () => {\r\n        let data = [];\r\n        data = getSubjects.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_subjectItem(item) }}>{item.subjectName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getChapters_view = () => {\r\n        let data = [];\r\n        data = getChapters.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={(e) => { click_chapterItem(e, item) }}>{item.chapterName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const click_classItem = (_item) => {\r\n        setSelectedClass(_item.id);\r\n        setSelectedClassName(`Class ${_item.className}`);\r\n    };\r\n    const click_subjectItem = (_item) => {\r\n        setSelectedSubject(_item.id);\r\n        mapSelectedSubjectsName(_item.id)\r\n    };\r\n    const click_chapterItem = (_e, _item) => {\r\n        // console.log(_item);\r\n        setSelectedChapterName(_item.chapterName);\r\n        highlight(_e, 'chapter_highlight');\r\n        if (_item.contentID == null) return;\r\n        if (_item.contentID == 'NULL') return;\r\n        setPlayerContentID(_item.contentID);\r\n        setPlayerTitle(_item.chapterName);\r\n        setLoadPlayer(true);\r\n    };\r\n    const highlight = (_e, _className) => {\r\n        var _target = _e.target;\r\n        document.querySelectorAll('.' + _className).forEach(i => {\r\n            i.classList.remove(_className);\r\n        });\r\n        _target.classList.add(_className);\r\n    };\r\n    const body_blue = () => {\r\n        document.body.classList.add('body-blue');\r\n    };\r\n    const body_blue_reset = () => {\r\n        document.body.classList.remove('body-blue');\r\n    };\r\n    const urlParamCreation = () => {\r\n        // props.history.push(`/home?cls=${getSelectedClass}&sub=${getSelectedSubject}&cls_name=${getSelectedClassName}&chap_name=${getSelectedChapterName}`);\r\n        const _search = `?cls=${getSelectedClass}&sub=${getSelectedSubject}&cls_name=${getSelectedClassName}&chap_name=${getSelectedChapterName}`;\r\n        props.history.replace({\r\n            search: _search\r\n        });\r\n    }\r\n    //#endregion\r\n\r\n    //#region Player\r\n    const [getLoadPlayer, setLoadPlayer] = useState(false);\r\n    const [getPlayerContentID, setPlayerContentID] = useState(null);\r\n    const [getPlayerTitle, setPlayerTitle] = useState(null);\r\n    const hidePlayer = () => {\r\n        setLoadPlayer(false);\r\n        setPlayerContentID(null);\r\n        setPlayerTitle(null);\r\n    };\r\n    //#endregion\r\n    return (\r\n        <>\r\n        <Toast />\r\n            <CheckIsActivated />\r\n            <Player chapter={getPlayerTitle} show={getLoadPlayer} contentID={getPlayerContentID} onhide={hidePlayer} />\r\n            <Header selected_class={getSelectedClassName} selected_subject={getSelectedSubjectName} selected_chapter={getSelectedChapterName} />\r\n            <Content\r\n                my_class={getClasses_view()} loading_class={getLoading_class}\r\n                my_subject={getSubjects_view()} loading_subject={getLoading_subject}\r\n                my_chapter={getChapters_view()} loading_chapter={getLoading_chapter}\r\n                isAuth\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport './Activation.scss';\r\nimport { ToastAlert } from '../../Admin/Toast/Toast';\r\nimport { Toast } from '../Toast/Toast';\r\nimport BrandAnimation from '../BrandAnimation/BrandAnimation';\r\nimport Loading from '../Loading/Loading';\r\nimport { useHistory } from 'react-router-dom';\r\nconst log = console.log;\r\n\r\nexport default function Activation() {\r\n  const { activation } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const baseurl = window.ffmpeg_baseurl;\r\n\r\n  useEffect(() => {\r\n    loadDeviceID();\r\n    GetRemoteUrl();\r\n  }, []);\r\n\r\n  //#region auth section and demo fn\r\n  const [getToken, setToken] = useState('');\r\n  const [getValidFrom, setValidFrom] = useState('');\r\n  const [getValidTo, setValidTo] = useState('');\r\n  const [getError, setError] = useState('');\r\n\r\n  const AuthGetToken = () => {\r\n    let post_url = `${baseurl}api/mpeg/AuthGetToken`;\r\n    let body = {\r\n      \"Username\": \"Samrat\",\r\n      \"Password\": \"123\"\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    axios.post(post_url, body, config).then(res => {\r\n      setError(res.data.data);\r\n      setIsLoading(false);\r\n      const { token, validFrom, validTo } = res.data;\r\n      setToken(token);\r\n      setValidFrom(Utc2Local(validFrom));\r\n      setValidTo(Utc2Local(validTo));\r\n      // console.log(token);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const AdminData = (token) => {\r\n    let post_url = `${baseurl}api/mpeg/AdminData`;\r\n    let body = {};\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    };\r\n    axios.post(post_url, body, config).then(res => {\r\n      setError(res.data.data);\r\n      setIsLoading(false);\r\n      console.log(res);\r\n    }).catch(err => {\r\n      // console.log(JSON.stringify(err));\r\n      let status = (err.response || {}).statusText || '';\r\n      console.log(status);\r\n      setIsLoading(false);\r\n    });\r\n\r\n  }\r\n  const Utc2Local = str => {\r\n    // https://momentjs.com/docs/#/parsing/string-format/\r\n    let dt = str;\r\n    if (dt) {\r\n      var x = moment.utc(dt, 'MM-DD-YYYY LTS');\r\n      dt = x.local().format('MM-DD-YYYY LTS');\r\n    }\r\n    return dt;\r\n  }\r\n  // const setActivation = () => {\r\n  //   dispatch({\r\n  //     type: 'SET_ACTIVATION',\r\n  //     payload: true\r\n  //     // payload: !activation.isActivate\r\n  //   });\r\n  // };\r\n  //#endregion\r\n\r\n  const [getIsLoading, setIsLoading] = useState(false);\r\n  const [getAppId, setAppId] = useState('');\r\n  const [getSerialKey, setSerialKey] = useState('');\r\n  const [getDeviceId, setDeviceId] = useState('');\r\n  const [getClientName, setClientName] = useState('');\r\n  const [getDesc, setDesc] = useState('');\r\n  const [remoteUrl, setRemoteUrl] = useState('');\r\n\r\n  const today = () => {\r\n    return moment().local().format('YYYY-MM-DD HH:mm:ss');\r\n  };\r\n  const loadDeviceID = () => {\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/DeviceInfo`)\r\n      .then(res => {\r\n        setDeviceId(res.data.deviceId);\r\n        setIsLoading(false);\r\n        // console.log(res.data);\r\n      }).catch(err => {\r\n        ToastAlert(\"Error load DeviceId\", 'e');\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const GetRemoteUrl = () => {\r\n    setIsLoading(true);\r\n    axios.get(`${baseurl}api/mpeg/GetRemoteUrl`)\r\n      .then(res => {\r\n        // console.log(res.data);\r\n        if (res.data.data) {\r\n          let url = res.data.data[0].url || '';\r\n          var patt = new RegExp(\"[/]$\");\r\n          var hasSlash = patt.test(url);\r\n          if (!hasSlash) {\r\n            url = `${url}/`;\r\n          }\r\n          setRemoteUrl(url);\r\n        }\r\n      }).catch(err => {\r\n      });\r\n  };\r\n  const handleSubmit = () => {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    const body = {\r\n      appId: getAppId,\r\n      serialKey: getSerialKey,\r\n      deviceId: getDeviceId,\r\n      clientName: getClientName,\r\n      description: getDesc,\r\n      activationDate: today()\r\n    };\r\n    // console.log(body);\r\n    setIsLoading(true);\r\n    axios.post(`${remoteUrl}api/mpeg/KeyActivation`, body, config).then(res => {\r\n      setIsLoading(false);\r\n      // console.log(res);\r\n      if (res.data.data) {\r\n        ToastAlert(res.data.data, 's');\r\n        KeyActivationClient(body, config);\r\n      }\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n      if (res.data.error_data)\r\n        ToastAlert(res.data.error_data, 's');\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n  const KeyActivationClient = (body, config) => {\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/KeyActivationClient`, body, config).then(res => {\r\n      setIsLoading(false);\r\n      // console.log(res);\r\n      if (res.data.data) {\r\n        setTimeout(() => {\r\n          history.push('/');\r\n        }, 2000);\r\n      }\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"C_Activation\">\r\n      <Toast />\r\n      <div style={{ position: 'relative' }}>\r\n        <BrandAnimation />\r\n      </div>\r\n      <Container fluid className=\"C_Activation\">\r\n        <Row className=\"h-100 m-0\">\r\n          <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n            <Card>\r\n              <Card.Header>\r\n                Key Activation\r\n                {\r\n                  getIsLoading ? <Loading /> : null\r\n                }\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"Device_ID\">\r\n                    <Form.Label>Device ID</Form.Label>\r\n                    <Form.Control type=\"text\" defaultValue={getDeviceId} placeholder=\"Device ID\" readOnly />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"App_ID\">\r\n                    <Form.Label>App ID</Form.Label>\r\n                    <Form.Control type=\"text\" autoComplete=\"off\" defaultValue={getAppId} onChange={(e) => setAppId(e.target.value)} placeholder=\"App ID\" />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Serial_Key\">\r\n                    <Form.Label>Serial Key</Form.Label>\r\n                    <Form.Control type=\"text\" autoComplete=\"off\" defaultValue={getSerialKey} placeholder=\"Serial Key\" onChange={(e) => setSerialKey(e.target.value)} />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Client_Name\">\r\n                    <Form.Label>Client Name</Form.Label>\r\n                    <Form.Control type=\"text\" autoComplete=\"off\" defaultValue={getClientName} placeholder=\"Client Name\" onChange={(e) => setClientName(e.target.value)} />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Client_Desc\">\r\n                    <Form.Label>Client Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} autoComplete=\"off\" defaultValue={getDesc} placeholder=\"Client Description\" onChange={(e) => setDesc(e.target.value)} />\r\n                  </Form.Group>\r\n                  <MDBBtn type=\"button\" color=\"indigo\" size=\"sm\" onClick={handleSubmit} >\r\n                    <MDBIcon icon=\"save\" />&nbsp;&nbsp;Activate\r\n                  </MDBBtn>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { ListGroup, Col, Container, Form, Row, Card, Table, Pagination, Dropdown, Modal, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport { ToastAlert } from '../../Admin/Toast/Toast';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './Activation.scss';\r\n\r\nimport { DatePicker } from '@y0c/react-datepicker';\r\nimport '@y0c/react-datepicker/assets/styles/calendar.scss';\r\n\r\nconst log = console.log;\r\n\r\n//https://reactjsexample.com/tag/date/\r\n//https://reactjsexample.com/react-datepicker-rangedatepicker-timepicker-component/\r\n// https://y0c.github.io/react-datepicker/?path=/story/calendar--custom-day-class\r\n\r\n// https://edwardfhsiao.github.io/react-picky-date-time/\r\n\r\nexport default function KeyGenerator() {\r\n  const baseurl = window.ffmpeg_baseurl;\r\n  const [getIsLoading, setIsLoading] = useState(false);\r\n  const [getError, setError] = useState('');\r\n\r\n  const [getAppId, setAppId] = useState('');\r\n  const [getSerialKey, setSerialKey] = useState('');\r\n  const [getCopyKeyGen, setCopyKeyGen] = useState('');\r\n  const [disabledRegister, setDisabledRegister] = useState(false);\r\n\r\n  const [getAllKeyGens, setAllKeyGens] = useState([]);\r\n  const [getKeyGenParams, setKeyGenParams] = useState({\r\n    \"pageindex\": 0,\r\n    \"limit\": 5\r\n  });\r\n  const [getPageItems, setPageItems] = useState([]);\r\n  const Limitoptions = [\r\n    { value: '5', label: '5' },\r\n    { value: '10', label: '10' },\r\n    { value: '50', label: '50' },\r\n    { value: '100', label: '100' }\r\n  ];\r\n  const [getCardBodyShow, setCardBodyShow] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalItems, setModalItems] = useState({});\r\n\r\n  let LazyKeyupTimer = useRef(null);\r\n  let appIDInput = useRef(null);\r\n  let SKeyInput = useRef(null);\r\n  let TimeInput = useRef(null);\r\n  let ToggleTarget = useRef(null);\r\n\r\n  //#region Hooks \r\n  useEffect(() => {\r\n    loadAppID();\r\n    LoadAllKeyGens(getKeyGenParams);\r\n  }, []);\r\n\r\n  //#endregion\r\n  const loadAppID = () => {\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/LicenseGenerateKey`)\r\n      .then(res => {\r\n        setAppId(res.data.appId);\r\n        setSerialKey(res.data.serialKey);\r\n        setIsLoading(false);\r\n        setCopyKeyGen(res.data);\r\n        setDisabledRegister(false)\r\n        // console.log(res.data);\r\n      }).catch(err => {\r\n        ToastAlert(\"Error load License Generate Key\", 'e');\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const today = () => {\r\n    return moment().local().format('YYYY-MM-DD HH:mm:ss');\r\n  }\r\n  const copyKeyGen = (data) => {\r\n    // console.log(getCopyKeyGen);\r\n    var textArea = document.createElement(\"textarea\");\r\n    if (data) {\r\n      textArea.value = JSON.stringify(data);\r\n    } else {\r\n      textArea.value = JSON.stringify(getCopyKeyGen);\r\n    }\r\n    document.body.appendChild(textArea);\r\n    // textArea.focus();\r\n    textArea.select();\r\n    try {\r\n      var successful = document.execCommand('copy');\r\n      var msg = successful ? 'successful' : 'unsuccessful';\r\n      // console.log('Fallback: Copying text command was ' + msg);\r\n    } catch (err) {\r\n      // console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n    document.body.removeChild(textArea);\r\n    ToastAlert('Copied', 's');\r\n\r\n  }\r\n  const handleSubmit = () => {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    const body = { LicenceAppId: getAppId, LicenceKey: getSerialKey, creationDate: today() };\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/AddLicenseKeyGen`, body, config).then(res => {\r\n      // console.log(res);\r\n      if (res.data.data)\r\n        ToastAlert(res.data.data, 's');\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n      setIsLoading(false);\r\n      setDisabledRegister(true);\r\n      LoadAllKeyGens(getKeyGenParams);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const RemoveKeyGen = (_appid) => {\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    };\r\n    const body = { LicenceAppId: _appid };\r\n    setIsLoading(true);\r\n    axios.post(`${baseurl}api/mpeg/RemoveLicenseKeyGen`, body, config).then(res => {\r\n      // console.log(res);\r\n      if (res.data.data)\r\n        ToastAlert(res.data.data, 's');\r\n      if (res.data.error)\r\n        ToastAlert(res.data.error, 'e');\r\n      setIsLoading(false);\r\n      LoadAllKeyGens(getKeyGenParams);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const LoadAllKeyGens = (_params) => {\r\n    setIsLoading(true);\r\n    axios.get(`${baseurl}api/mpeg/getLicenseKeyGens`, {\r\n      params: _params\r\n    }).then(res => {\r\n      setAllKeyGens(res.data.data);\r\n      let { pageindex, totalPage } = res.data;\r\n      let PageItems = [];\r\n      for (let p = 0; p < totalPage; p++) {\r\n        PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>{p + 1}</Pagination.Item>);\r\n      }\r\n      setPageItems(PageItems);\r\n      setIsLoading(false);\r\n      // setError('');\r\n      // console.log(res.data);\r\n    }).catch(err => {\r\n      setIsLoading(false);\r\n      setError('Error loading Content');\r\n    });\r\n  }\r\n  const LazyKeyup = (_callback) => {\r\n    clearTimeout(LazyKeyupTimer.current);\r\n    LazyKeyupTimer.current = setTimeout(() => {\r\n      _callback();\r\n      // _callback.call(this, _args);\r\n    }, 1000);\r\n  };\r\n  const searchByAppID = _appID => {\r\n    SKeyInput.current.value = '';\r\n    TimeInput.current.value = '';\r\n    LazyKeyup(() => {\r\n      setKeyGenParams(prevData => {\r\n        let data = { ...prevData, \"appId\": _appID, \"pageindex\": 0 };\r\n        delete data[\"serialKey\"];\r\n        delete data[\"creationDate\"];\r\n        LoadAllKeyGens(data);\r\n        return data;\r\n      });\r\n    });\r\n  };\r\n  const searchBySKey = _SKey => {\r\n    appIDInput.current.value = '';\r\n    TimeInput.current.value = '';\r\n    console.log(0);\r\n    LazyKeyup(() => {\r\n      setKeyGenParams(prevData => {\r\n        let data = { ...prevData, \"serialKey\": _SKey, \"pageindex\": 0 };\r\n        delete data[\"appId\"];\r\n        delete data[\"creationDate\"];\r\n        LoadAllKeyGens(data);\r\n        return data;\r\n      });\r\n    });\r\n  };\r\n  const searchByTimestamp = _timestamp => {\r\n    // log(TimeInput.current);\r\n    // if(TimeInput.current) {\r\n    //   let children = TimeInput.current.querySelectorAll('input');\r\n    //   log(children);\r\n    // }\r\n\r\n    let creationDate = undefined;\r\n    if (_timestamp) {\r\n      let { $d } = _timestamp;\r\n      creationDate = moment($d).format('YYYY-MM-DD');\r\n      // console.log('searchByTimestamp', _timestamp, $d);\r\n    }\r\n\r\n    appIDInput.current.value = '';\r\n    SKeyInput.current.value = '';\r\n    LazyKeyup(() => {\r\n      setKeyGenParams(prevData => {\r\n        let data = { ...prevData, creationDate, \"pageindex\": 0 };\r\n        delete data[\"appId\"];\r\n        delete data[\"serialKey\"];\r\n        LoadAllKeyGens(data);\r\n        return data;\r\n      });\r\n    });\r\n  };\r\n  const pageChange = p_index => {\r\n    setKeyGenParams(prevData => {\r\n      let data = { ...prevData, \"pageindex\": p_index };\r\n      LoadAllKeyGens(data);\r\n      return data;\r\n    });\r\n  };\r\n  const toggleCardBody = () => {\r\n    setCardBodyShow(prev => {\r\n      let elm = ToggleTarget.current;\r\n      if (!elm) return;\r\n      let h = elm.offsetHeight;\r\n      if (prev) {\r\n        elm.classList.add('minimize-zone-active')\r\n        setTimeout(() => {\r\n          elm.style.marginTop = `-${h}px`;\r\n        }, 100);\r\n      } else {\r\n        elm.style.marginTop = `0px`;\r\n        setTimeout(() => {\r\n          elm.classList.remove('minimize-zone-active')\r\n        }, 300);\r\n      }\r\n      return !prev;\r\n    });\r\n  }\r\n  const Action_Click = (_item, e) => {\r\n    const { appId, serialKey } = _item;\r\n    if ('copy_key' === e) {\r\n      copyKeyGen({ appId, serialKey });\r\n    } else if ('delete_key' === e) {\r\n      if (confirm('are you sure to delete appId')) {\r\n        RemoveKeyGen(appId);\r\n      }\r\n    }\r\n    else if ('client_info' === e) {\r\n      setModalItems(_item);\r\n      setShowModal(true)\r\n    }\r\n  };\r\n  const handleCloseModal = () => setShowModal(false);\r\n\r\n  return (\r\n    <Container fluid className=\"C_KeyGenerator\">\r\n      <Row className=\"h-100 m-0\">\r\n        <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n          <Card>\r\n            <Card.Header>\r\n              {disabledRegister ? \"Reload New KeyGen\" : \"Key Generator\"}\r\n              <span className=\"loading-error\">{getError}</span>\r\n              {\r\n                getIsLoading ? <Loading /> : null\r\n              }\r\n              <span className=\"minimize-card\" onClick={toggleCardBody}>\r\n                <MDBIcon icon={getCardBodyShow ? 'minus' : 'plus'} />\r\n              </span>\r\n            </Card.Header>\r\n            {\r\n              <Card.Body ref={ToggleTarget} className=\"minimize-zone\">\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"App_ID\">\r\n                    <Form.Label>App ID</Form.Label>\r\n                    <MDBIcon icon=\"redo-alt\" className=\"indigo-text refresh-btn\" size=\"lg\" title=\"Refresh KeyGen\" onClick={loadAppID} />\r\n                    <MDBIcon icon=\"copy\" className=\"green-text refresh-btn\" size=\"lg\" title=\"Copy KeyGen\" onClick={() => copyKeyGen(null)} />\r\n                    <Form.Control type=\"text\" defaultValue={getAppId} placeholder=\"App ID\" readOnly />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"Serial_Key\">\r\n                    <Form.Label>Serial Key</Form.Label>\r\n                    <Form.Control type=\"text\" defaultValue={getSerialKey} placeholder=\"Serial Key\" readOnly />\r\n                  </Form.Group>\r\n                  <MDBBtn type=\"button\" color=\"indigo\" size=\"sm\" onClick={handleSubmit} disabled={disabledRegister}>\r\n                    <MDBIcon icon=\"save\" />&nbsp;&nbsp;Register\r\n                  </MDBBtn>\r\n                </Form>\r\n              </Card.Body>\r\n            }\r\n          </Card>\r\n        </Col>\r\n        <Col className=\"col-12 pt-3\">\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <div className=\"td-filter-box\">\r\n                    App ID\r\n                    <InputGroup size=\"sm\" className=\"\">\r\n                      <FormControl\r\n                        placeholder=\"Search by App ID\"\r\n                        aria-label=\"\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        onKeyUp={(e) => { searchByAppID(e.target.value); }}\r\n                        ref={appIDInput}\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  <div className=\"td-filter-box\">\r\n                    Serial Key\r\n                    <InputGroup size=\"sm\" className=\"\">\r\n                      <FormControl\r\n                        placeholder=\"Search by serial Key\"\r\n                        aria-label=\"\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        onKeyUp={(e) => { searchBySKey(e.target.value); }}\r\n                        ref={SKeyInput}\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  <div className=\"td-filter-box dt-range\">\r\n                    Timestamp\r\n                    <InputGroup size=\"sm\" className=\"\" ref={TimeInput}>\r\n                      <DatePicker\r\n                        onChange={searchByTimestamp}\r\n                        placeholder=\"Search by Timestamp\"\r\n                        showDefaultIcon clear\r\n                      />\r\n                    </InputGroup>\r\n                  </div>\r\n                </th>\r\n                <th>\r\n                  Action\r\n                  <MDBIcon icon=\"redo-alt\" className=\"indigo-text refresh-btn\" size=\"lg\" title=\"Refresh All KeyGens\" onClick={() => { LoadAllKeyGens(getKeyGenParams) }} />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                getAllKeyGens.map((item, index) => {\r\n                  return <tr key={index}>\r\n                    <td>{item.appId}</td>\r\n                    <td>{item.serialKey}</td>\r\n                    <td>\r\n                      {item.creationDate}\r\n                      {item.deviceId ? <MDBIcon icon=\"check\" className=\"green-text activated\" title=\"Activated\"/> : null}\r\n                    </td>\r\n                    <td className=\"actions\">\r\n                      <div>\r\n                        <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'copy_key')}>\r\n                          <MDBIcon size=\"lg\" icon=\"copy\" className=\"green-text\" title=\"Copy KeyGen\" />\r\n                        </button>\r\n                        <button title=\"Client Info\" className=\"\" type=\"button\" onClick={() => Action_Click(item, 'client_info')}>\r\n                          <MDBIcon size=\"lg\" icon=\"sticky-note indigo-text\" />\r\n                        </button>\r\n                        <button title=\"Delete Key\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_key')}>\r\n                          <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>;\r\n                })\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n          <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n        </Col>\r\n      </Row>\r\n      <Modal show={showModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Client Information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-0 client-info\">\r\n          <ListGroup>\r\n            <ListGroup.Item><span className=\"lbl\">App Id:</span> {modalItems.appId}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Serial Key:</span> {modalItems.serialKey}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Creation Date:</span> {modalItems.creationDate}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Device Id:</span> {modalItems.deviceId}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Client Name:</span> {modalItems.clientName}</ListGroup.Item>\r\n            <ListGroup.Item><span className=\"lbl\">Description:</span> {modalItems.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Entry from \"./Entry/Entry\";\r\nimport Home from \"./Home/Home\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport Upload from \"./Admin/Upload/Upload\";\r\nimport Conversion from \"./Admin/Conversion/Conversion\";\r\nimport AddCsub from \"./Admin/AddCsub/AddCsub\";\r\nimport AddChap from \"./Admin/AddChap/AddChap\";\r\nimport Settings from \"./Admin/Settings/Settings\";\r\nimport Activation from \"./Admin/Activation/Activation\";\r\nimport KeyGenerator from './Admin/Activation/KeyGenerator';\r\nimport Login from \"./Admin/Activation/Login\";\r\nimport './ffmpeg.scss';\r\n\r\nexport function Routes() {\r\n    return (\r\n        <Fragment>\r\n            <Route path=\"/\" exact>\r\n                {\r\n                    <Entry />\r\n                    // <Admin />\r\n                }\r\n            </Route>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            <Switch>\r\n                <Route path=\"/home\" exact component={Home} />\r\n                <Route path=\"/login\" exact component={Login} />\r\n                <Route path=\"/activation\" exact component={Activation} />\r\n                <Route path=\"/admin/upload\" exact component={Upload} />\r\n                <Route path=\"/admin/conversion\" exact component={Conversion} />\r\n                <Route path=\"/admin/addclsnsub\" exact component={AddCsub} />\r\n                <Route path=\"/admin/addchap\" exact component={AddChap} />\r\n                <Route path=\"/admin/settings\" exact component={Settings} />\r\n                <Route path=\"/admin/keygen\" exact component={KeyGenerator} />\r\n                <Route path=\"/test\" exact render={() => { return <h3>Test</h3> }} />\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function RoutesUser() {\r\n    return (\r\n        <Fragment>\r\n            <Route path=\"/\" exact>\r\n                {\r\n                    <Entry />\r\n                }\r\n            </Route>\r\n            <Route path=\"/home\" exact component={Home} />\r\n            <Route path=\"/admin\" exact render={() => { return <h3>This is an user app</h3> }} />\r\n        </Fragment>\r\n    )\r\n}\r\n","const initialState = {\r\n    isActivate: false,\r\n    isAuth: true,\r\n    loggedInUser: null,\r\n    loading_CheckActivation: false\r\n};\r\nexport function ActivationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case 'SET_ACTIVATION':\r\n            return {\r\n                ...state,\r\n                isActivate: action.payload\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.payload\r\n            }\r\n        case 'SET_LOADING_CheckActivation':\r\n            return {\r\n                ...state,\r\n                loading_CheckActivation: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { ActivationReducer } from \"./ActivationReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    activation: ActivationReducer\r\n});\r\n\r\nexport default rootReducer;","import React, { Component } from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom'; // BrowserRouter  HashRouter\r\nimport { Routes, RoutesUser } from './ffmpeg/Routes';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './ffmpeg/reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            {\r\n              // <Routes />\r\n              <RoutesUser />\r\n            }\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport axios from 'axios';\r\n\r\n//#region Demo\r\n// axios.defaults.baseURL = \"https://jsonplaceholder.typicode.com\";\r\n// axios.defaults.headers.common['Auth'] = 'AUTH 56';\r\n// axios.defaults.headers.post['content'] = 'CONTENT XX'\r\n\r\n// axios.interceptors.request.use(req => {\r\n//     // console.log({req});\r\n//     return req;\r\n// }, error => {\r\n//     console.log(error);\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n// axios.interceptors.response.use(res => {\r\n//     // console.log({res});\r\n//     return res;\r\n// });\r\n//#endregion\r\nconsole.clear();\r\nlet publish = window.publish || false;\r\nif(publish == true){\r\n    window.ffmpeg_baseurl = window.location.origin + \"/\";\r\n} else {\r\n    window.ffmpeg_baseurl = \"http://localhost:50017/\";\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}